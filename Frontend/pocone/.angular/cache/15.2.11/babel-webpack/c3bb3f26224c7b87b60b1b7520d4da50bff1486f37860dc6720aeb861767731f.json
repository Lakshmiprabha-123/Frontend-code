{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/project.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ng2-charts\";\nfunction TeamCompositionChartComponent_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", project_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(project_r1.name);\n  }\n}\nexport class TeamCompositionChartComponent {\n  constructor(projectService) {\n    this.projectService = projectService;\n    this.projects = [];\n    this.selectedProject = null;\n    this.pieChartLabels = [];\n    this.pieChartData = [];\n    this.pieChartType = 'pie'; // Use ChartType for chart type\n    this.pieChartOptions = {\n      responsive: true,\n      plugins: {\n        legend: {\n          display: true,\n          position: 'right',\n          align: 'left',\n          labels: {\n            generateLabels: chart => {\n              const data = chart.data;\n              if (data.labels && data.datasets && data.datasets[0] && data.datasets[0].data) {\n                return data.labels.map((label, index) => {\n                  const value = data.datasets[0].data[index];\n                  const labelText = typeof label === 'string' || typeof label === 'number' ? label.toString() : '';\n                  // Log the label and value to the console\n                  console.log(`Legend Item - Label: ${labelText}, Value: ${value} members`);\n                  // Ensure backgroundColor is an array and safely access it\n                  const backgroundColor = data.datasets[0].backgroundColor;\n                  const fillStyle = Array.isArray(backgroundColor) ? backgroundColor[index] : '#000';\n                  return {\n                    text: `${label}: ${value} members`,\n                    fillStyle: fillStyle,\n                    strokeStyle: '#fff',\n                    lineWidth: 2,\n                    hidden: false,\n                    index: index\n                  };\n                });\n              }\n              return [];\n            }\n          }\n        }\n      }\n    };\n    this.pieChartColors = [{\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#E6E6FA', '#F08080', '#90EE90', '#FFA07A']\n    }];\n  }\n  ngOnInit() {\n    console.log('Component initialized');\n    this.projectService.getAllProjects().subscribe(projects => {\n      this.projects = projects;\n      if (this.projects.length > 0) {\n        this.onProjectSelect({\n          target: {\n            value: this.projects[0].id\n          }\n        });\n      }\n    });\n  }\n  onProjectSelect(event) {\n    const selectedProjectId = +event.target.value;\n    const selectedProject = this.projects.find(project => project.id === selectedProjectId);\n    if (selectedProject && selectedProject.status) {\n      const teamComposition = selectedProject.status.teamComposition;\n      // Log the team composition object to the console\n      console.log('Team Composition:', teamComposition);\n      this.pieChartLabels = Object.keys(teamComposition);\n      this.pieChartData = Object.values(teamComposition);\n      // Log the labels and data for the chart\n      console.log('Pie Chart Labels:', this.pieChartLabels);\n      console.log('Pie Chart Data (Number of Members):', this.pieChartData);\n      this.selectedProject = selectedProject;\n    } else {\n      this.pieChartLabels = [];\n      this.pieChartData = [];\n      this.selectedProject = null;\n    }\n  }\n  static #_ = this.ɵfac = function TeamCompositionChartComponent_Factory(t) {\n    return new (t || TeamCompositionChartComponent)(i0.ɵɵdirectiveInject(i1.ProjectService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TeamCompositionChartComponent,\n    selectors: [[\"app-team-composition-chart\"]],\n    decls: 6,\n    vars: 6,\n    consts: [[1, \"dashboard-container\"], [1, \"chart-container\"], [1, \"legend-box\"], [2, \"width\", \"200px\", 3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"baseChart\", \"\", 3, \"data\", \"labels\", \"chartType\", \"colors\", \"options\"], [3, \"value\"]],\n    template: function TeamCompositionChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"select\", 3);\n        i0.ɵɵlistener(\"change\", function TeamCompositionChartComponent_Template_select_change_3_listener($event) {\n          return ctx.onProjectSelect($event);\n        });\n        i0.ɵɵtemplate(4, TeamCompositionChartComponent_option_4_Template, 2, 2, \"option\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"canvas\", 5);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.projects);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"data\", ctx.pieChartData)(\"labels\", ctx.pieChartLabels)(\"chartType\", ctx.pieChartType)(\"colors\", ctx.pieChartColors)(\"options\", ctx.pieChartOptions);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i4.BaseChartDirective],\n    styles: [\".dashboard-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    gap: 20px; \\n  }\\n  \\n  .chart-container[_ngcontent-%COMP%] {\\n    flex: 1; \\n  }\\n\\n  \\n  .chart-container[_ngcontent-%COMP%]   .legend-box[_ngcontent-%COMP%] {\\n    border: 1px solid #ccc;  \\n    padding: 10px;           \\n    background-color: #f9f9f9; \\n    margin-right: 20px;       \\n    display: inline-block;    \\n             \\n  }\\n  \\n.chart-legend[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column; \\n  align-items: flex-start; \\n  padding: 10px;\\n  border: 1px solid #ddd; \\n  background-color: #f9f9f9; \\n  border-radius: 5px; \\n}\\n\\n\\n.chart-legend[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%] {\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n.chart-legend[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  margin-bottom: 5px; \\n}\\n\\n.chart-legend[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:last-child {\\n  margin-bottom: 0; \\n}\\n\\n.chart-legend[_ngcontent-%COMP%]   .legend-color-box[_ngcontent-%COMP%] {\\n  width: 20px;\\n  height: 20px;\\n  margin-right: 10px;\\n  border-radius: 3px; \\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGVhbS1jb21wb3NpdGlvbi1jaGFydC90ZWFtLWNvbXBvc2l0aW9uLWNoYXJ0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsU0FBUyxFQUFFLGlDQUFpQztFQUM5Qzs7RUFFQTtJQUNFLE9BQU8sRUFBRSxxQ0FBcUM7RUFDaEQ7OztFQUdBO0lBQ0Usc0JBQXNCLEdBQUcsaUNBQWlDO0lBQzFELGFBQWEsWUFBWSxnQ0FBZ0M7SUFDekQseUJBQXlCLEVBQUUscUNBQXFDO0lBQ2hFLGtCQUFrQixRQUFRLG1DQUFtQztJQUM3RCxxQkFBcUIsS0FBSyx3Q0FBd0M7YUFDekQsK0JBQStCO0VBQzFDO0VBQ0EsNENBQTRDO0FBQzlDO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQixFQUFFLCtCQUErQjtFQUN2RCx1QkFBdUIsRUFBRSw4Q0FBOEM7RUFDdkUsYUFBYTtFQUNiLHNCQUFzQixFQUFFLGlDQUFpQztFQUN6RCx5QkFBeUIsRUFBRSx1Q0FBdUM7RUFDbEUsa0JBQWtCLEVBQUUsb0JBQW9CO0FBQzFDOztBQUVBLGtDQUFrQztBQUNsQztFQUNFLGdCQUFnQjtFQUNoQixVQUFVO0VBQ1YsU0FBUztBQUNYOztBQUVBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixrQkFBa0IsRUFBRSwrQkFBK0I7QUFDckQ7O0FBRUE7RUFDRSxnQkFBZ0IsRUFBRSw0Q0FBNEM7QUFDaEU7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixrQkFBa0IsRUFBRSxrQ0FBa0M7QUFDeEQiLCJzb3VyY2VzQ29udGVudCI6WyIuZGFzaGJvYXJkLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBnYXA6IDIwcHg7IC8qIFNwYWNlIGJldHdlZW4gdGhlIGNvbXBvbmVudHMgKi9cbiAgfVxuICBcbiAgLmNoYXJ0LWNvbnRhaW5lciB7XG4gICAgZmxleDogMTsgLyogQWxsb3cgY29tcG9uZW50cyB0byBncm93IGVxdWFsbHkgKi9cbiAgfVxuXG4gIFxuICAuY2hhcnQtY29udGFpbmVyIC5sZWdlbmQtYm94IHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjOyAgLyogQm9yZGVyIGFyb3VuZCB0aGUgbGVnZW5kIGJveCAqL1xuICAgIHBhZGRpbmc6IDEwcHg7ICAgICAgICAgICAvKiBTcGFjZSBpbnNpZGUgdGhlIGxlZ2VuZCBib3ggKi9cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5OyAvKiBPcHRpb25hbDogbGlnaHQgYmFja2dyb3VuZCBjb2xvciAqL1xuICAgIG1hcmdpbi1yaWdodDogMjBweDsgICAgICAgLyogU3BhY2UgYmV0d2VlbiBjaGFydCBhbmQgbGVnZW5kICovXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAgICAvKiBFbnN1cmVzIGl0J3MgYWxpZ25lZCB3aXRoIHRoZSBjaGFydCAqL1xuICAgICAgICAgICAgIC8qIE1vdmVzIHRoZSBib3ggdG8gdGhlIHJpZ2h0ICovXG4gIH1cbiAgLyogVGFyZ2V0IHRoZSBsZWdlbmQgY29udGFpbmVyIGluIENoYXJ0LmpzICovXG4uY2hhcnQtbGVnZW5kIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgLyogQXJyYW5nZSBsZWdlbmRzIHZlcnRpY2FsbHkgKi9cbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7IC8qIEFsaWduIGl0ZW1zIHRvIHRoZSBzdGFydCBvZiB0aGUgY29udGFpbmVyICovXG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7IC8qIEJvcmRlciBhcm91bmQgdGhlIGxlZ2VuZCBib3ggKi9cbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTsgLyogQmFja2dyb3VuZCBjb2xvciBvZiB0aGUgbGVnZW5kIGJveCAqL1xuICBib3JkZXItcmFkaXVzOiA1cHg7IC8qIFJvdW5kZWQgY29ybmVycyAqL1xufVxuXG4vKiBTdHlsZSBpbmRpdmlkdWFsIGxlZ2VuZCBpdGVtcyAqL1xuLmNoYXJ0LWxlZ2VuZCB1bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cblxuLmNoYXJ0LWxlZ2VuZCBsaSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDVweDsgLyogU3BhY2UgYmV0d2VlbiBsZWdlbmQgaXRlbXMgKi9cbn1cblxuLmNoYXJ0LWxlZ2VuZCBsaTpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDsgLyogUmVtb3ZlIGJvdHRvbSBtYXJnaW4gZnJvbSB0aGUgbGFzdCBpdGVtICovXG59XG5cbi5jaGFydC1sZWdlbmQgLmxlZ2VuZC1jb2xvci1ib3gge1xuICB3aWR0aDogMjBweDtcbiAgaGVpZ2h0OiAyMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDNweDsgLyogUm91bmRlZCBjb3JuZXJzIGZvciBjb2xvciBib3ggKi9cbn1cblxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","TeamCompositionChartComponent","constructor","projectService","responsive","plugins","legend","display","position","align","labels","generateLabels","chart","data","datasets","map","label","index","value","labelText","toString","console","log","backgroundColor","fillStyle","Array","isArray","text","strokeStyle","lineWidth","hidden","ngOnInit","getAllProjects","subscribe","projects","length","onProjectSelect","target","id","event","selectedProjectId","selectedProject","find","project","status","teamComposition","pieChartLabels","Object","keys","pieChartData","values","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/decodersmdu/pocone/src/app/team-composition-chart/team-composition-chart.component.html","/home/decodersmdu/pocone/src/app/team-composition-chart/team-composition-chart.component.ts"],"sourcesContent":["<div class=\"dashboard-container\">\n    <div class=\"chart-container\">\n      <div class=\"legend-box\"></div>\n    <select (change)=\"onProjectSelect($event)\" style=\"width: 200px;\">\n      <option *ngFor=\"let project of projects\" [value]=\"project.id\">{{ project.name }}</option>\n    </select>\n    <canvas baseChart\n            [data]=\"pieChartData\"\n            [labels]=\"pieChartLabels\"\n            [chartType]=\"pieChartType\"\n            [colors]=\"pieChartColors\"\n            [options]=\"pieChartOptions\">\n    </canvas>\n  </div>\n  </div>","// import { Component, OnInit } from '@angular/core';\n// import { ProjectService } from '../Services/project.service';\n// import { Project } from '../Models/project.model';\n// import { Label, Color, SingleDataSet } from 'ng2-charts';\n// import { Chart, ChartOptions, ChartType } from 'chart.js';\n\n// @Component({\n//   selector: 'app-team-composition-chart',\n//   templateUrl: './team-composition-chart.component.html',\n//   styleUrls: ['./team-composition-chart.component.css']\n// })\n// export class TeamCompositionChartComponent implements OnInit {\n//   projects: Project[] = [];\n//   selectedProject: Project | null = null;\n//   pieChartLabels: Label[] = [];\n//   pieChartData: SingleDataSet = [];\n//   pieChartType: ChartType = 'pie';\n//   pieChartOptions: ChartOptions = {\n//     responsive: true,\n//     plugins: {\n//       legend: {\n//         display: true,\n//         position: 'right',\n//         align: 'left',  \n//         labels: {\n//           boxWidth: 20, \n//           padding: 10,  \n//         }\n//       }\n//     }\n//   };\n//   pieChartOptions: ChartOptions = {\n//   responsive: true,\n//   plugins: {\n//     legend: {\n//       display: true,\n//       position: 'right',  // Legends on the right side\n//       labels: {\n//         boxWidth: 20,     // Size of the color box next to the label\n//         padding: 15,      // Space between the labels\n//         font: {\n//           size: 14        // Legend font size\n//         },\n//         generateLabels: (chart: Chart) => {\n//           const data = chart.data;\n        \n//           if (data.labels && data.datasets && data.datasets[0] && data.datasets[0].data) {\n//             return data.labels.map((label: string | number | string[] | number[] | Date, index: number) => {\n              \n//               const value = data.datasets![0].data![index];  // Get the value from the pie chart data\n        \n//               // Convert the label to a string, handling arrays and complex types\n//               let labelString = '';\n        \n//               if (typeof label === 'string' || typeof label === 'number') {\n//                 labelString = label.toString();  // Direct conversion for strings and numbers\n//               } else if (Array.isArray(label)) {\n//                 labelString = label.join(', ');  // Convert arrays to a comma-separated string\n//               } else if (label instanceof Date) {\n//                 labelString = label.toDateString();  // Convert Date objects to a readable string\n//               }\n        \n//               // Check if backgroundColor is an array before accessing it\n//               const backgroundColor = data.datasets![0].backgroundColor;\n//               let fillStyle = '#000';  // Default to black if color is not found\n        \n//               if (Array.isArray(backgroundColor)) {\n//                 fillStyle = (backgroundColor[index] as string) || '#000';  // Access the color safely\n//               }\n        \n//               return {\n//                 text: `${labelString}: ${value}`,  // Combine the label and value for the legend\n//                 fillStyle: fillStyle,  // Set the color for the legend\n//                 strokeStyle: '#fff',  // White stroke for the legend box\n//                 lineWidth: 2,\n//                 hidden: isNaN(value as number) || value === null,  // Hide if value is NaN or null\n//                 index: index\n//               };\n//             });\n//           }\n        \n//           return [];\n//         }\n               \n        \n        \n//       }\n//     }\n//   },\n//   layout: {\n//     padding: {\n//       right: 20,  // Add extra padding on the right for the legend\n//     }\n//   }\n// };\n\n//   pieChartColors: Color[] = [\n//     {\n//       backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#E6E6FA', '#F08080', '#90EE90', '#FFA07A' ]\n//     }\n//   ];\n\n//   constructor(private projectService: ProjectService) {}\n\n//   ngOnInit(): void {\n//     this.projectService.getAllProjects().subscribe((projects: Project[]) => {\n//       this.projects = projects;\n//       if (this.projects.length > 0) {\n//         this.onProjectSelect({ target: { value: this.projects[0].id } });\n//       }\n//     });\n//   }\n\n//   onProjectSelect(event: any): void {\n//     const selectedProjectId = +event.target.value;\n//     const selectedProject = this.projects.find(project => project.id === selectedProjectId);\n\n//     if (selectedProject && selectedProject.status) {\n//       const teamComposition = selectedProject.status.teamComposition;\n//       this.pieChartLabels = Object.keys(teamComposition);\n//       this.pieChartData = Object.values(teamComposition);\n//       this.selectedProject = selectedProject;\n//     } else {\n//       this.pieChartLabels = [];\n//       this.pieChartData = [];\n//       this.selectedProject = null;\n//     }\n//   }\n// }\nimport { Component, OnInit } from '@angular/core';\nimport { ProjectService } from '../Services/project.service';\nimport { Project } from '../Models/project.model';\nimport { Label, Color, SingleDataSet } from 'ng2-charts';\nimport { ChartOptions, Chart, ChartData, ChartType } from 'chart.js';\n\n@Component({\n  selector: 'app-team-composition-chart',\n  templateUrl: './team-composition-chart.component.html',\n  styleUrls: ['./team-composition-chart.component.css']\n})\nexport class TeamCompositionChartComponent implements OnInit {\n  projects: Project[] = [];\n  selectedProject: Project | null = null;\n  pieChartLabels: Label[] = [];\n  pieChartData: SingleDataSet = [];\n  pieChartType: ChartType = 'pie'; // Use ChartType for chart type\n  pieChartOptions: ChartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: 'right',\n        align: 'left',\n        labels: {\n          generateLabels: (chart: any) => {\n            const data = chart.data;\n            if (data.labels && data.datasets && data.datasets[0] && data.datasets[0].data) {\n              return data.labels.map((label: string | number, index: number) => {\n                const value = data.datasets[0].data[index] as number;\n                const labelText = typeof label === 'string' || typeof label === 'number' ? label.toString() : '';\n      \n                // Log the label and value to the console\n                console.log(`Legend Item - Label: ${labelText}, Value: ${value} members`);\n      \n                // Ensure backgroundColor is an array and safely access it\n                const backgroundColor = data.datasets[0].backgroundColor as string[];\n                const fillStyle = Array.isArray(backgroundColor) ? backgroundColor[index] : '#000';\n      \n                return {\n                  text: `${label}: ${value} members`,\n                  fillStyle: fillStyle,\n                  strokeStyle: '#fff',\n                  lineWidth: 2,\n                  hidden: false,\n                  index: index\n                };\n              });\n            }\n            return [];\n          }\n        }\n      }\n      \n      \n      \n    }\n  };\n  pieChartColors: Color[] = [\n    {\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#E6E6FA', '#F08080', '#90EE90', '#FFA07A']\n    }\n  ];\n\n  constructor(private projectService: ProjectService) {}\n\n  ngOnInit(): void {\n    console.log('Component initialized');\n    this.projectService.getAllProjects().subscribe((projects: Project[]) => {\n      this.projects = projects;\n      if (this.projects.length > 0) {\n        this.onProjectSelect({ target: { value: this.projects[0].id } });\n      }\n    });\n  }\n\n  onProjectSelect(event: any): void {\n    const selectedProjectId = +event.target.value;\n    const selectedProject = this.projects.find(project => project.id === selectedProjectId);\n  \n    if (selectedProject && selectedProject.status) {\n      const teamComposition = selectedProject.status.teamComposition;\n  \n      // Log the team composition object to the console\n      console.log('Team Composition:', teamComposition);\n  \n      this.pieChartLabels = Object.keys(teamComposition);\n      this.pieChartData = Object.values(teamComposition);\n  \n      // Log the labels and data for the chart\n      console.log('Pie Chart Labels:', this.pieChartLabels);\n      console.log('Pie Chart Data (Number of Members):', this.pieChartData);\n  \n      this.selectedProject = selectedProject;\n    } else {\n      this.pieChartLabels = [];\n      this.pieChartData = [];\n      this.selectedProject = null;\n    }\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}