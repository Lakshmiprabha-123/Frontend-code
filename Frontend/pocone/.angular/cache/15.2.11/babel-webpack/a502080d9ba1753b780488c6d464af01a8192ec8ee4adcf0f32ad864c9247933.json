{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/project.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ng2-charts\";\nfunction WeeklyStatusComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", project_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(project_r3.name);\n  }\n}\nfunction WeeklyStatusComponent_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const year_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", year_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(year_r4);\n  }\n}\nfunction WeeklyStatusComponent_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const month_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", month_r5.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(month_r5.name);\n  }\n}\nexport class WeeklyStatusComponent {\n  constructor(projectService) {\n    this.projectService = projectService;\n    this.projects = [];\n    this.selectedProjectId = 0;\n    this.selectedYear = new Date().getFullYear();\n    this.selectedMonth = new Date().getMonth() + 1; // Current month\n    this.years = [];\n    this.months = [{\n      value: 1,\n      name: 'January'\n    }, {\n      value: 2,\n      name: 'February'\n    }, {\n      value: 3,\n      name: 'March'\n    }, {\n      value: 4,\n      name: 'April'\n    }, {\n      value: 5,\n      name: 'May'\n    }, {\n      value: 6,\n      name: 'June'\n    }, {\n      value: 7,\n      name: 'July'\n    }, {\n      value: 8,\n      name: 'August'\n    }, {\n      value: 9,\n      name: 'September'\n    }, {\n      value: 10,\n      name: 'October'\n    }, {\n      value: 11,\n      name: 'November'\n    }, {\n      value: 12,\n      name: 'December'\n    }];\n    this.barChartOptions = {\n      responsive: true,\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Week Number(yearly based)'\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            min: 0,\n            max: 5,\n            stepSize: 1,\n            callback: value => {\n              const statuses = ['Undefined', 'Not Yet Started', 'Deep Risk', 'Risk', 'Slow', 'On Track'];\n              return statuses[value];\n            }\n          },\n          scaleLabel: {\n            display: true,\n            labelString: 'Status'\n          }\n        }]\n      },\n      legend: {\n        display: false,\n        labels: {\n          fontColor: 'black',\n          generateLabels: function (chart) {\n            return [{\n              text: 'On Track',\n              fillStyle: 'rgb(129, 219, 129)',\n              strokeStyle: 'rgb(129, 219, 129)',\n              hidden: false\n            }, {\n              text: 'Slow',\n              fillStyle: '#FFCE56',\n              strokeStyle: '#FFCE56',\n              hidden: false\n            }, {\n              text: 'Risk',\n              fillStyle: ' #FF9F40',\n              strokeStyle: '#FF9F40',\n              hidden: false\n            }, {\n              text: 'Deep Risk',\n              fillStyle: 'rgb(240, 107, 107)',\n              strokeStyle: 'rgb(240, 107, 107)',\n              hidden: false\n            }, {\n              text: 'Not yet started',\n              fillStyle: 'grey',\n              strokeStyle: 'grey',\n              hidden: false\n            }];\n          }\n        }\n      },\n      tooltips: {\n        callbacks: {\n          label: tooltipItem => {\n            const statuses = ['Undefined', 'Not Yet Started', 'Deep Risk', 'Risk', 'Slow', 'On Track'];\n            return statuses[tooltipItem.yLabel] || 'Unknown';\n          }\n        }\n      }\n    };\n    this.barChartLabels = [];\n    this.barChartType = 'bar';\n    this.barChartLegend = true;\n    this.barChartData = [{\n      data: [],\n      label: 'Weekly Project Status',\n      backgroundColor: []\n    }];\n  }\n  ngOnInit() {\n    const currentYear = new Date().getFullYear();\n    this.years = Array.from({\n      length: 10\n    }, (_, i) => currentYear - i);\n    this.projectService.getAllProjects().subscribe(projects => {\n      this.projects = projects;\n      if (projects.length > 0 && projects[0].id !== undefined) {\n        this.selectedProjectId = projects[0].id;\n        this.fetchWeeklyStatus();\n      }\n    });\n  }\n  fetchWeeklyStatus() {\n    if (this.selectedProjectId && this.selectedYear && this.selectedMonth) {\n      this.projectService.getWeeklyStatusByMonth(this.selectedProjectId, this.selectedYear, this.selectedMonth).subscribe(statusData => {\n        const statusMap = statusData.map(item => ({\n          weekNumber: item.weekNumber,\n          statusValue: this.mapStatusToValue(item.currentStatus)\n        }));\n        const weekNumbers = statusMap.map(item => `Week ${item.weekNumber}`);\n        const statusValues = statusMap.map(item => item.statusValue);\n        const backgroundColors = statusMap.map(item => this.getStatusColor(item.statusValue));\n        this.barChartLabels = weekNumbers;\n        this.barChartData = [{\n          data: statusValues,\n          label: `Weekly Status for Project ${this.selectedProjectId}`,\n          backgroundColor: backgroundColors\n        }];\n      });\n    }\n  }\n  mapStatusToValue(status) {\n    switch (status) {\n      case 'On Track':\n        return 5;\n      case 'Slow':\n        return 4;\n      case 'Risk':\n        return 3;\n      case 'Deep Risk':\n        return 2;\n      case 'Not Yet Started':\n        return 1;\n      default:\n        return 0;\n    }\n  }\n  getStatusColor(value) {\n    switch (value) {\n      case 5:\n        return 'rgb(129, 219, 129)';\n        ;\n      case 4:\n        return '#FFCE56';\n      case 3:\n        return ' #FF9F40';\n      case 2:\n        return 'rgb(240, 107, 107)';\n      case 1:\n        return 'rgb(128, 128, 128)';\n      default:\n        return 'rgb(128, 128, 128)';\n    }\n  }\n  static #_ = this.ɵfac = function WeeklyStatusComponent_Factory(t) {\n    return new (t || WeeklyStatusComponent)(i0.ɵɵdirectiveInject(i1.ProjectService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WeeklyStatusComponent,\n    selectors: [[\"app-weekly-status\"]],\n    decls: 41,\n    vars: 11,\n    consts: [[1, \"dashboard-container\"], [1, \"chart-container\", 2, \"display\", \"flex\", \"align-items\", \"flex-start\"], [1, \"chart-box\", 2, \"display\", \"block\"], [1, \"select-container\"], [\"for\", \"projectSelect\"], [\"id\", \"projectSelect\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"yearSelect\"], [\"id\", \"yearSelect\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"for\", \"monthSelect\"], [\"id\", \"monthSelect\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"baseChart\", \"\", 3, \"datasets\", \"labels\", \"options\", \"legend\", \"chartType\"], [1, \"legend-box\"], [1, \"legend-color\", 2, \"background-color\", \"rgb(129, 219, 129)\"], [1, \"legend-color\", 2, \"background-color\", \"#FFCE56\"], [1, \"legend-color\", 2, \"background-color\", \"#FF9F40\"], [1, \"legend-color\", 2, \"background-color\", \"rgb(240, 107, 107)\"], [1, \"legend-color\", 2, \"background-color\", \"grey\"], [3, \"value\"]],\n    template: function WeeklyStatusComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\")(5, \"label\", 4);\n        i0.ɵɵtext(6, \"Select Project:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"select\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function WeeklyStatusComponent_Template_select_ngModelChange_7_listener($event) {\n          return ctx.selectedProjectId = $event;\n        })(\"change\", function WeeklyStatusComponent_Template_select_change_7_listener() {\n          return ctx.fetchWeeklyStatus();\n        });\n        i0.ɵɵtemplate(8, WeeklyStatusComponent_option_8_Template, 2, 2, \"option\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"br\")(10, \"br\");\n        i0.ɵɵelementStart(11, \"label\", 7);\n        i0.ɵɵtext(12, \"Select Year:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"select\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function WeeklyStatusComponent_Template_select_ngModelChange_13_listener($event) {\n          return ctx.selectedYear = $event;\n        })(\"change\", function WeeklyStatusComponent_Template_select_change_13_listener() {\n          return ctx.fetchWeeklyStatus();\n        });\n        i0.ɵɵtemplate(14, WeeklyStatusComponent_option_14_Template, 2, 2, \"option\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"br\")(16, \"br\");\n        i0.ɵɵelementStart(17, \"label\", 9);\n        i0.ɵɵtext(18, \"Select Month:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"select\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function WeeklyStatusComponent_Template_select_ngModelChange_19_listener($event) {\n          return ctx.selectedMonth = $event;\n        })(\"change\", function WeeklyStatusComponent_Template_select_change_19_listener() {\n          return ctx.fetchWeeklyStatus();\n        });\n        i0.ɵɵtemplate(20, WeeklyStatusComponent_option_20_Template, 2, 2, \"option\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"br\")(22, \"br\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(23, \"canvas\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 12)(25, \"ul\")(26, \"li\");\n        i0.ɵɵelement(27, \"span\", 13);\n        i0.ɵɵtext(28, \"On Track \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"li\");\n        i0.ɵɵelement(30, \"span\", 14);\n        i0.ɵɵtext(31, \"Slow \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"li\");\n        i0.ɵɵelement(33, \"span\", 15);\n        i0.ɵɵtext(34, \"Risk \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"li\");\n        i0.ɵɵelement(36, \"span\", 16);\n        i0.ɵɵtext(37, \"Deep Risk \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"li\");\n        i0.ɵɵelement(39, \"span\", 17);\n        i0.ɵɵtext(40, \"Not Yet Started \");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedProjectId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.projects);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedYear);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.years);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedMonth);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.months);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"datasets\", ctx.barChartData)(\"labels\", ctx.barChartLabels)(\"options\", ctx.barChartOptions)(\"legend\", ctx.barChartLegend)(\"chartType\", ctx.barChartType);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i4.BaseChartDirective],\n    styles: [\".dashboard-container[_ngcontent-%COMP%] {\\n  \\n  gap: 20px; \\n}\\n.controls[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n  display: flex;\\n  gap: 20px;\\n}\\n.chart-container[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 800px;\\n  margin: 0 auto;\\n}\\n  .select-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between; \\n    align-items: center;\\n    gap: 0px; \\n  }\\n  \\n  .select-container[_ngcontent-%COMP%]    > div[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n  }\\n  \\n  .select-container[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n    margin-right: 10px; \\n  }\\n  \\n  .select-container[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n    padding: 5px;\\n  }\\n\\n \\n  \\n  .legend-box[_ngcontent-%COMP%] {\\n    width: 150px; \\n    margin-right: 20px; \\n    padding: 10px; \\n    background-color: #f9f9f9; \\n    border: 1px solid #ccc; \\n    border-radius: 8px; \\n  }\\n  \\n  .legend-box[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%] {\\n    list-style-type: none;\\n    padding: 0;\\n  }\\n  \\n  .legend-box[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n    margin-bottom: 3px;\\n  }\\n  \\n  .legend-color[_ngcontent-%COMP%] {\\n    width: 20px;\\n    height: 20px;\\n    margin-right: 10px;\\n    display: inline-block;\\n    border-radius: 5px;\\n  }\\n  \\n  .chart-box[_ngcontent-%COMP%] {\\n    flex-grow: 1; \\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvd2Vla2x5LXN0YXR1cy93ZWVrbHktc3RhdHVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsU0FBUyxFQUFFLGlDQUFpQztBQUM5QztBQUNBO0VBQ0UsbUJBQW1CO0VBQ25CLGFBQWE7RUFDYixTQUFTO0FBQ1g7QUFDQTtFQUNFLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsY0FBYztBQUNoQjtFQUNFO0lBQ0UsYUFBYTtJQUNiLDhCQUE4QixFQUFFLG9DQUFvQztJQUNwRSxtQkFBbUI7SUFDbkIsUUFBUSxFQUFFLHNDQUFzQztFQUNsRDs7RUFFQTtJQUNFLGFBQWE7SUFDYixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxrQkFBa0IsRUFBRSw2Q0FBNkM7RUFDbkU7O0VBRUE7SUFDRSxZQUFZO0VBQ2Q7Ozs7RUFJQTtJQUNFLFlBQVksRUFBRSw0QkFBNEI7SUFDMUMsa0JBQWtCLEVBQUUsbUNBQW1DO0lBQ3ZELGFBQWEsRUFBRSxrQ0FBa0M7SUFDakQseUJBQXlCLEVBQUUsdUNBQXVDO0lBQ2xFLHNCQUFzQixFQUFFLG1DQUFtQztJQUMzRCxrQkFBa0IsRUFBRSx1Q0FBdUM7RUFDN0Q7O0VBRUE7SUFDRSxxQkFBcUI7SUFDckIsVUFBVTtFQUNaOztFQUVBO0lBQ0UsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsWUFBWSxFQUFFLCtDQUErQztFQUMvRCIsInNvdXJjZXNDb250ZW50IjpbIi5kYXNoYm9hcmQtY29udGFpbmVyIHtcbiAgLyogZGlzcGxheTogZmxleDsgKi9cbiAgZ2FwOiAyMHB4OyAvKiBTcGFjZSBiZXR3ZWVuIHRoZSBjb21wb25lbnRzICovXG59XG4uY29udHJvbHMge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDIwcHg7XG59XG4uY2hhcnQtY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogODAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuICAuc2VsZWN0LWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IC8qIEFkanVzdCBzcGFjaW5nIGJldHdlZW4gZWxlbWVudHMgKi9cbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogMHB4OyAvKiBTcGFjZSBiZXR3ZWVuIGVhY2ggc2VsZWN0IGVsZW1lbnQgKi9cbiAgfVxuICBcbiAgLnNlbGVjdC1jb250YWluZXIgPiBkaXYge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgfVxuICBcbiAgLnNlbGVjdC1jb250YWluZXIgbGFiZWwge1xuICAgIG1hcmdpbi1yaWdodDogMTBweDsgLyogU3BhY2UgYmV0d2VlbiB0aGUgbGFiZWwgYW5kIHRoZSBkcm9wZG93biAqL1xuICB9XG4gIFxuICAuc2VsZWN0LWNvbnRhaW5lciBzZWxlY3Qge1xuICAgIHBhZGRpbmc6IDVweDtcbiAgfVxuXG4gXG4gIFxuICAubGVnZW5kLWJveCB7XG4gICAgd2lkdGg6IDE1MHB4OyAvKiBXaWR0aCBvZiB0aGUgbGVnZW5kIGJveCAqL1xuICAgIG1hcmdpbi1yaWdodDogMjBweDsgLyogU3BhY2UgYmV0d2VlbiBsZWdlbmQgYW5kIGNoYXJ0ICovXG4gICAgcGFkZGluZzogMTBweDsgLyogUGFkZGluZyBpbnNpZGUgdGhlIGxlZ2VuZCBib3ggKi9cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5OyAvKiBMaWdodCBiYWNrZ3JvdW5kIGNvbG9yIGZvciB0aGUgYm94ICovXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYzsgLyogQm9yZGVyIHRvIG1ha2UgdGhlIGJveCB2aXNpYmxlICovXG4gICAgYm9yZGVyLXJhZGl1czogOHB4OyAvKiBTbGlnaHQgcm91bmRpbmcgb2YgdGhlIGJveCBjb3JuZXJzICovXG4gIH1cbiAgXG4gIC5sZWdlbmQtYm94IHVsIHtcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuICBcbiAgLmxlZ2VuZC1ib3ggbGkge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAzcHg7XG4gIH1cbiAgXG4gIC5sZWdlbmQtY29sb3Ige1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgfVxuICBcbiAgLmNoYXJ0LWJveCB7XG4gICAgZmxleC1ncm93OiAxOyAvKiBFbnN1cmUgdGhlIGNoYXJ0IHRha2VzIHRoZSByZW1haW5pbmcgc3BhY2UgKi9cbiAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","WeeklyStatusComponent","constructor","projectService","Date","getFullYear","getMonth","value","name","responsive","scales","xAxes","scaleLabel","display","labelString","yAxes","ticks","min","max","stepSize","callback","statuses","legend","labels","fontColor","generateLabels","chart","text","fillStyle","strokeStyle","hidden","tooltips","callbacks","label","tooltipItem","yLabel","data","backgroundColor","ngOnInit","currentYear","years","Array","from","length","_","i","getAllProjects","subscribe","projects","id","undefined","selectedProjectId","fetchWeeklyStatus","selectedYear","selectedMonth","getWeeklyStatusByMonth","statusData","statusMap","map","item","weekNumber","statusValue","mapStatusToValue","currentStatus","weekNumbers","statusValues","backgroundColors","getStatusColor","barChartLabels","barChartData","status","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/decodersmdu/pocone/src/app/weekly-status/weekly-status.component.html","/home/decodersmdu/pocone/src/app/weekly-status/weekly-status.component.ts"],"sourcesContent":["<div class=\"dashboard-container\">\n  <div class=\"chart-container\"  style=\"display: flex; align-items: flex-start;\">\n    <div class=\"chart-box\" style=\"display: block;\">\n    <div class=\"select-container\">\n    <div>\n    <label for=\"projectSelect\">Select Project:</label>\n    <select id=\"projectSelect\" [(ngModel)]=\"selectedProjectId\" (change)=\"fetchWeeklyStatus()\">\n      <option *ngFor=\"let project of projects\" [value]=\"project.id\">{{ project.name }}</option>\n    </select><br><br>\n  \n    <label for=\"yearSelect\">Select Year:</label>\n    <select id=\"yearSelect\" [(ngModel)]=\"selectedYear\" (change)=\"fetchWeeklyStatus()\">\n      <option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</option>\n    </select><br><br>\n  \n    <label for=\"monthSelect\">Select Month:</label>\n    <select id=\"monthSelect\" [(ngModel)]=\"selectedMonth\" (change)=\"fetchWeeklyStatus()\">\n      <option *ngFor=\"let month of months\" [value]=\"month.value\">{{ month.name }}</option>\n    </select><br><br>\n    </div>\n    </div>\n    \n    \n    <canvas baseChart\n            [datasets]=\"barChartData\"\n            [labels]=\"barChartLabels\"\n            [options]=\"barChartOptions\"\n            [legend]=\"barChartLegend\"\n            [chartType]=\"barChartType\">\n    </canvas>\n  </div>\n  <div class=\"legend-box\">\n    <ul>\n      <li>\n        <span class=\"legend-color\" style=\"background-color: rgb(129, 219, 129);\"></span>On Track\n      </li>\n      <li>\n        <span class=\"legend-color\" style=\"background-color: #FFCE56;\"></span>Slow\n      </li>\n      <li>\n        <span class=\"legend-color\" style=\"background-color: #FF9F40;\"></span>Risk\n      </li>\n      <li>\n        <span class=\"legend-color\" style=\"background-color: rgb(240, 107, 107);\"></span>Deep Risk\n      </li>\n      <li>\n        <span class=\"legend-color\" style=\"background-color: grey;\"></span>Not Yet Started\n      </li>\n    </ul>\n  </div>\n  </div>\n  </div>\n  \n  \n\n","import { Component } from '@angular/core';\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\nimport { Label } from 'ng2-charts';\nimport { ProjectService } from '../Services/project.service';\nimport { Project } from '../Models/project.model';\n\n@Component({\n  selector: 'app-weekly-status',\n  templateUrl: './weekly-status.component.html',\n  styleUrls: ['./weekly-status.component.css']\n})\nexport class WeeklyStatusComponent {\n  public projects: Project[] = [];\n  public selectedProjectId: number = 0;\n  public selectedYear: number = new Date().getFullYear();\n  public selectedMonth: number = new Date().getMonth() + 1; // Current month\n  public years: number[] = [];\n  public months = [\n    { value: 1, name: 'January' },\n    { value: 2, name: 'February' },\n    { value: 3, name: 'March' },\n    { value: 4, name: 'April' },\n    { value: 5, name: 'May' },\n    { value: 6, name: 'June' },\n    { value: 7, name: 'July' },\n    { value: 8, name: 'August' },\n    { value: 9, name: 'September' },\n    { value: 10, name: 'October' },\n    { value: 11, name: 'November' },\n    { value: 12, name: 'December' }\n  ];\n\n  public barChartOptions: ChartOptions = {\n    responsive: true,\n    scales: {\n      xAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: 'Week Number(yearly based)'\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          min: 0,\n          max: 5,\n          stepSize: 1,\n          callback: (value: number) => {\n            const statuses = ['Undefined', 'Not Yet Started', 'Deep Risk', 'Risk', 'Slow', 'On Track'];\n            return statuses[value];\n          }\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Status'\n        }\n      }]\n    },\n    legend: {\n      display: false,\n      labels: {\n        fontColor: 'black',\n        generateLabels: function(chart) {\n          return [\n            {\n              text: 'On Track',\n              fillStyle: 'rgb(129, 219, 129)',\n              strokeStyle: 'rgb(129, 219, 129)',\n              hidden: false,\n            },\n            {\n              text: 'Slow',\n              fillStyle: '#FFCE56',\n              strokeStyle: '#FFCE56',\n              hidden: false,\n            },\n            {\n              text: 'Risk',\n              fillStyle: ' #FF9F40',\n              strokeStyle: '#FF9F40',\n              hidden: false,\n            },\n            {\n              text: 'Deep Risk',\n              fillStyle: 'rgb(240, 107, 107)',\n              strokeStyle: 'rgb(240, 107, 107)',\n              hidden: false,\n            },\n            {\n              text: 'Not yet started',\n              fillStyle: 'grey',\n              strokeStyle: 'grey',\n              hidden: false,\n            }\n          ];\n        }\n      }\n    },\n    tooltips: {\n      callbacks: {\n        label: (tooltipItem) => {\n          const statuses = ['Undefined', 'Not Yet Started', 'Deep Risk', 'Risk', 'Slow', 'On Track'];\n          return statuses[tooltipItem.yLabel as number] || 'Unknown';\n        }\n      }\n    }\n  };\n  \n  public barChartLabels: Label[] = [];\n  public barChartType: ChartType = 'bar';\n  public barChartLegend = true;\n  public barChartData: ChartDataSets[] = [\n    { data: [], label: 'Weekly Project Status', backgroundColor: [] }\n  ];\n\n  constructor(private projectService: ProjectService) { }\n\n  ngOnInit(): void {\n    const currentYear = new Date().getFullYear();\n    this.years = Array.from({ length: 10 }, (_, i) => currentYear - i);\n\n    this.projectService.getAllProjects().subscribe((projects: Project[]) => {\n      this.projects = projects;\n      if (projects.length > 0 && projects[0].id !== undefined) {\n        this.selectedProjectId = projects[0].id!;\n        this.fetchWeeklyStatus();\n      }\n    });\n  }\nfetchWeeklyStatus(): void {\n    if (this.selectedProjectId && this.selectedYear && this.selectedMonth) {\n      this.projectService.getWeeklyStatusByMonth(this.selectedProjectId, this.selectedYear, this.selectedMonth)\n        .subscribe((statusData: { weekNumber: number, currentStatus: string }[]) => {\n          const statusMap = statusData.map(item => ({\n            weekNumber: item.weekNumber,\n            statusValue: this.mapStatusToValue(item.currentStatus)\n          }));\n\n          const weekNumbers = statusMap.map(item => `Week ${item.weekNumber}`);\n          const statusValues = statusMap.map(item => item.statusValue);\n          const backgroundColors = statusMap.map(item => this.getStatusColor(item.statusValue));\n\n          this.barChartLabels = weekNumbers;\n          this.barChartData = [\n            { data: statusValues, label: `Weekly Status for Project ${this.selectedProjectId}`, backgroundColor: backgroundColors }\n          ];\n        });\n    }\n  }\n\n  mapStatusToValue(status: string): number {\n    switch (status) {\n      case 'On Track': return 5;\n      case 'Slow': return 4;\n      case 'Risk': return 3;\n      case 'Deep Risk': return 2;\n      case 'Not Yet Started': return 1;\n      default: return 0;\n    }\n  }\n\n  getStatusColor(value: number): string {\n    switch (value) {\n      case 5: return 'rgb(129, 219, 129)'; ;\n      case 4: return '#FFCE56';\n      case 3: return ' #FF9F40';  \n      case 2: return 'rgb(240, 107, 107)';\n      case 1: return 'rgb(128, 128, 128)'; \n      default: return 'rgb(128, 128, 128)'; \n    }\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}