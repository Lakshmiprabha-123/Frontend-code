{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet DashboardComponent = class DashboardComponent {\n  constructor(http) {\n    this.http = http;\n    this.barChartOptions = {\n      responsive: true\n    };\n    this.barChartLabels = ['Project A', 'Project B', 'Project C'];\n    this.barChartType = 'bar';\n    this.barChartLegend = true;\n    this.barChartData = {\n      labels: this.barChartLabels,\n      datasets: [{\n        data: [65, 59, 80],\n        label: 'On Track',\n        backgroundColor: 'green'\n      }, {\n        data: [28, 48, 40],\n        label: 'Slow',\n        backgroundColor: 'yellow'\n      }, {\n        data: [35, 29, 55],\n        label: 'Risk',\n        backgroundColor: 'brown'\n      }, {\n        data: [18, 48, 77],\n        label: 'Deep Risk',\n        backgroundColor: 'red'\n      }]\n    };\n  }\n  ngOnInit() {\n    this.fetchProjectData();\n  }\n  fetchProjectData() {\n    // Replace with your API endpoint\n    this.http.get('http://localhost:8080/projects').subscribe(data => {\n      this.updateCharts(data);\n    });\n  }\n  updateCharts(data) {\n    this.barChartLabels = data.map(project => project.name);\n    this.pieChartLabels = this.barChartLabels;\n    const statuses = ['On Track', 'Slow', 'Risk', 'Deep Risk'];\n    const statusColors = {\n      'On Track': 'green',\n      'Slow': 'yellow',\n      'Risk': 'brown',\n      'Deep Risk': 'red'\n    };\n    const barData = statuses.map(status => ({\n      data: data.filter(project => project.status === status).map(project => project.name),\n      label: status,\n      backgroundColor: statusColors[status]\n    }));\n    const pieData = statuses.map(status => ({\n      data: data.filter(project => project.status === status).length,\n      label: status,\n      backgroundColor: statusColors[status]\n    }));\n    this.barChartData = [{\n      data: data.map(project => statuses.indexOf(project.status)),\n      label: 'Project Status'\n    }];\n    this.pieChartData = pieData;\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"mappings":"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","names":["Component","DashboardComponent","constructor","http","responsive","labels","barChartLabels","datasets","data","label","backgroundColor","ngOnInit","fetchProjectData","get","subscribe","updateCharts","map","project","name","pieChartLabels","statuses","statusColors","barData","status","filter","pieData","length","barChartData","indexOf","pieChartData","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/decodersmdu/pocone/src/app/dashboard/dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ChartOptions, ChartType, ChartData } from 'chart.js';\nimport { Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  public barChartOptions: ChartOptions = {\n    responsive: true,\n  };\n\n  public barChartLabels: Label[] = ['Project A', 'Project B', 'Project C'];\n\n  public barChartType: ChartType = 'bar';\n  public barChartLegend = true;\n\n  public barChartData: ChartData<'bar'> = {\n    labels: this.barChartLabels,\n    datasets: [\n      { data: [65, 59, 80], label: 'On Track', backgroundColor: 'green' },\n      { data: [28, 48, 40], label: 'Slow', backgroundColor: 'yellow' },\n      { data: [35, 29, 55], label: 'Risk', backgroundColor: 'brown' },\n      { data: [18, 48, 77], label: 'Deep Risk', backgroundColor: 'red' }\n    ]\n  };\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.fetchProjectData();\n  }\n\n  fetchProjectData(): void {\n    // Replace with your API endpoint\n    this.http.get<any[]>('http://localhost:8080/projects').subscribe(data => {\n      this.updateCharts(data);\n    });\n  }\n\n  updateCharts(data: any[]): void {\n    this.barChartLabels = data.map(project => project.name);\n    this.pieChartLabels = this.barChartLabels;\n\n    const statuses = ['On Track', 'Slow', 'Risk', 'Deep Risk'];\n    const statusColors = {\n      'On Track': 'green',\n      'Slow': 'yellow',\n      'Risk': 'brown',\n      'Deep Risk': 'red'\n    };\n\n    const barData = statuses.map(status => ({\n      data: data.filter(project => project.status === status).map(project => project.name),\n      label: status,\n      backgroundColor: statusColors[status]\n    }));\n\n    const pieData = statuses.map(status => ({\n      data: data.filter(project => project.status === status).length,\n      label: status,\n      backgroundColor: statusColors[status]\n    }));\n\n    this.barChartData = [{ data: data.map(project => statuses.indexOf(project.status)), label: 'Project Status' }];\n    this.pieChartData = pieData;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}