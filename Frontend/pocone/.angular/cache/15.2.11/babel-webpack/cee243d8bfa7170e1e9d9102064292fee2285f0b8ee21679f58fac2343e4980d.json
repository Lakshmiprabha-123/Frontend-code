{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/project.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction WeeklyStatusComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"canvas\", 11);\n    i0.ɵɵelementEnd();\n  }\n}\nexport class WeeklyStatusComponent {\n  constructor(projectService) {\n    this.projectService = projectService;\n    this.projects = [];\n    this.selectedProjectId = 0;\n    this.selectedYear = new Date().getFullYear();\n    this.selectedMonth = new Date().getMonth() + 1; // Current month\n    this.years = [];\n    this.months = [{\n      value: 1,\n      name: 'January'\n    }, {\n      value: 2,\n      name: 'February'\n    }, {\n      value: 3,\n      name: 'March'\n    }, {\n      value: 4,\n      name: 'April'\n    }, {\n      value: 5,\n      name: 'May'\n    }, {\n      value: 6,\n      name: 'June'\n    }, {\n      value: 7,\n      name: 'July'\n    }, {\n      value: 8,\n      name: 'August'\n    }, {\n      value: 9,\n      name: 'September'\n    }, {\n      value: 10,\n      name: 'October'\n    }, {\n      value: 11,\n      name: 'November'\n    }, {\n      value: 12,\n      name: 'December'\n    }];\n    this.barChartOptions = {\n      responsive: true,\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Week Number'\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            min: 0,\n            max: 5,\n            stepSize: 1,\n            callback: value => {\n              const statuses = ['Undefined', 'Not Yet Started', 'Deep Risk', 'Risk', 'Slow', 'On Track'];\n              return statuses[value];\n            }\n          }\n        }]\n      },\n      legend: {\n        display: true,\n        position: 'bottom',\n        labels: {\n          fontColor: 'black'\n        }\n      },\n      tooltips: {\n        callbacks: {\n          label: tooltipItem => {\n            const statuses = ['Undefined', 'Not Yet Started', 'Deep Risk', 'Risk', 'Slow', 'On Track'];\n            return statuses[tooltipItem.yLabel] || 'Unknown';\n          }\n        }\n      }\n    };\n    this.barChartLabels = [];\n    this.barChartType = 'bar';\n    this.barChartLegend = true;\n    this.barChartData = [{\n      data: [],\n      label: 'Weekly Project Status',\n      backgroundColor: []\n    }];\n  }\n  ngOnInit() {\n    const currentYear = new Date().getFullYear();\n    this.years = Array.from({\n      length: 10\n    }, (_, i) => currentYear - i);\n    this.projectService.getProjectList().subscribe(projects => {\n      this.projects = projects;\n      if (projects.length > 0 && projects[0].id !== undefined) {\n        this.selectedProjectId = projects[0].id;\n        this.fetchWeeklyStatus();\n      }\n    });\n  }\n  fetchWeeklyStatus() {\n    if (this.selectedProjectId && this.selectedYear && this.selectedMonth) {\n      this.projectService.getWeeklyStatusByMonth(this.selectedProjectId, this.selectedYear, this.selectedMonth).subscribe(statusData => {\n        const statusMap = statusData.map(item => ({\n          weekNumber: item.weekNumber,\n          statusValue: this.mapStatusToValue(item.currentStatus)\n        }));\n        const weekNumbers = statusMap.map(item => `Week ${item.weekNumber}`);\n        const statusValues = statusMap.map(item => item.statusValue);\n        const backgroundColors = statusMap.map(item => this.getStatusColor(item.statusValue));\n        this.barChartLabels = weekNumbers;\n        this.barChartData = [{\n          data: statusValues,\n          label: `Weekly Status for Project ${this.selectedProjectId}`,\n          backgroundColor: backgroundColors\n        }];\n      });\n    }\n  }\n  mapStatusToValue(status) {\n    switch (status) {\n      case 'On Track':\n        return 5;\n      case 'Slow':\n        return 4;\n      case 'Risk':\n        return 3;\n      case 'Deep Risk':\n        return 2;\n      case 'Not Yet Started':\n        return 1;\n      default:\n        return 0;\n    }\n  }\n  getStatusColor(value) {\n    switch (value) {\n      case 5:\n        return 'green';\n      case 4:\n        return 'orange';\n      case 3:\n        return 'yellow';\n      case 2:\n        return 'red';\n      case 1:\n        return 'gray';\n      default:\n        return 'gray';\n    }\n  }\n  static #_ = this.ɵfac = function WeeklyStatusComponent_Factory(t) {\n    return new (t || WeeklyStatusComponent)(i0.ɵɵdirectiveInject(i1.ProjectService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WeeklyStatusComponent,\n    selectors: [[\"app-weekly-status\"]],\n    decls: 19,\n    vars: 4,\n    consts: [[1, \"container\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"projectName\"], [\"type\", \"text\", \"id\", \"projectName\", \"name\", \"projectName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"month\"], [\"type\", \"number\", \"id\", \"month\", \"name\", \"month\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"year\"], [\"type\", \"number\", \"id\", \"year\", \"name\", \"year\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [4, \"ngIf\"], [\"id\", \"barChart\"]],\n    template: function WeeklyStatusComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Weekly Status Bar Chart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function WeeklyStatusComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.fetchWeeklyStatus();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Project Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function WeeklyStatusComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.projectName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"Month:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function WeeklyStatusComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.month = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n        i0.ɵɵtext(14, \"Year:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function WeeklyStatusComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.year = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"button\", 9);\n        i0.ɵɵtext(17, \"Fetch Status\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(18, WeeklyStatusComponent_div_18_Template, 2, 0, \"div\", 10);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.projectName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.month);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.year);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.chartData);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","WeeklyStatusComponent","constructor","projectService","Date","getFullYear","getMonth","value","name","responsive","scales","xAxes","scaleLabel","display","labelString","yAxes","ticks","min","max","stepSize","callback","statuses","legend","position","labels","fontColor","tooltips","callbacks","label","tooltipItem","yLabel","data","backgroundColor","ngOnInit","currentYear","years","Array","from","length","_","i","getProjectList","subscribe","projects","id","undefined","selectedProjectId","fetchWeeklyStatus","selectedYear","selectedMonth","getWeeklyStatusByMonth","statusData","statusMap","map","item","weekNumber","statusValue","mapStatusToValue","currentStatus","weekNumbers","statusValues","backgroundColors","getStatusColor","barChartLabels","barChartData","status","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/decodersmdu/pocone/src/app/weekly-status/weekly-status.component.html","/home/decodersmdu/pocone/src/app/weekly-status/weekly-status.component.ts"],"sourcesContent":["<div class=\"container\">\n    <h2>Weekly Status Bar Chart</h2>\n    \n    <form (ngSubmit)=\"fetchWeeklyStatus()\">\n      <div class=\"form-group\">\n        <label for=\"projectName\">Project Name:</label>\n        <input type=\"text\" id=\"projectName\" [(ngModel)]=\"projectName\" name=\"projectName\" class=\"form-control\" required>\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"month\">Month:</label>\n        <input type=\"number\" id=\"month\" [(ngModel)]=\"month\" name=\"month\" class=\"form-control\" required>\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"year\">Year:</label>\n        <input type=\"number\" id=\"year\" [(ngModel)]=\"year\" name=\"year\" class=\"form-control\" required>\n      </div>\n  \n      <button type=\"submit\" class=\"btn btn-primary\">Fetch Status</button>\n    </form>\n  \n    <div *ngIf=\"chartData\">\n      <canvas id=\"barChart\"></canvas>\n    </div>\n  </div>\n  ","import { Component } from '@angular/core';\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\nimport { Label } from 'ng2-charts';\nimport { ProjectService } from '../Services/project.service';\nimport { Project } from '../Models/project.model';\n\n@Component({\n  selector: 'app-weekly-status',\n  templateUrl: './weekly-status.component.html',\n  styleUrls: ['./weekly-status.component.css']\n})\nexport class WeeklyStatusComponent {\n  public projects: Project[] = [];\n  public selectedProjectId: number = 0;\n  public selectedYear: number = new Date().getFullYear();\n  public selectedMonth: number = new Date().getMonth() + 1; // Current month\n  public years: number[] = [];\n  public months = [\n    { value: 1, name: 'January' },\n    { value: 2, name: 'February' },\n    { value: 3, name: 'March' },\n    { value: 4, name: 'April' },\n    { value: 5, name: 'May' },\n    { value: 6, name: 'June' },\n    { value: 7, name: 'July' },\n    { value: 8, name: 'August' },\n    { value: 9, name: 'September' },\n    { value: 10, name: 'October' },\n    { value: 11, name: 'November' },\n    { value: 12, name: 'December' }\n  ];\n\n  public barChartOptions: ChartOptions = {\n    responsive: true,\n    scales: {\n      xAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: 'Week Number'\n        }\n      }],\n      yAxes: [{\n        ticks: {\n          min: 0,\n          max: 5,\n          stepSize: 1,\n          callback: (value: number) => {\n            const statuses = ['Undefined', 'Not Yet Started', 'Deep Risk', 'Risk', 'Slow', 'On Track'];\n            return statuses[value];\n          }\n        }\n      }]\n    },\n    legend: {\n      display: true,\n      position: 'bottom',\n      labels: {\n        fontColor: 'black'\n      }\n    },\n    tooltips: {\n      callbacks: {\n        label: (tooltipItem) => {\n          const statuses = ['Undefined', 'Not Yet Started', 'Deep Risk', 'Risk', 'Slow', 'On Track'];\n          return statuses[tooltipItem.yLabel as number] || 'Unknown';\n        }\n      }\n    }\n  };\n  \n  public barChartLabels: Label[] = [];\n  public barChartType: ChartType = 'bar';\n  public barChartLegend = true;\n  public barChartData: ChartDataSets[] = [\n    { data: [], label: 'Weekly Project Status', backgroundColor: [] }\n  ];\n\n  constructor(private projectService: ProjectService) { }\n\n  ngOnInit(): void {\n    const currentYear = new Date().getFullYear();\n    this.years = Array.from({ length: 10 }, (_, i) => currentYear - i);\n\n    this.projectService.getProjectList().subscribe((projects: Project[]) => {\n      this.projects = projects;\n      if (projects.length > 0 && projects[0].id !== undefined) {\n        this.selectedProjectId = projects[0].id!;\n        this.fetchWeeklyStatus();\n      }\n    });\n  }\nfetchWeeklyStatus(): void {\n    if (this.selectedProjectId && this.selectedYear && this.selectedMonth) {\n      this.projectService.getWeeklyStatusByMonth(this.selectedProjectId, this.selectedYear, this.selectedMonth)\n        .subscribe((statusData: { weekNumber: number, currentStatus: string }[]) => {\n          const statusMap = statusData.map(item => ({\n            weekNumber: item.weekNumber,\n            statusValue: this.mapStatusToValue(item.currentStatus)\n          }));\n\n          const weekNumbers = statusMap.map(item => `Week ${item.weekNumber}`);\n          const statusValues = statusMap.map(item => item.statusValue);\n          const backgroundColors = statusMap.map(item => this.getStatusColor(item.statusValue));\n\n          this.barChartLabels = weekNumbers;\n          this.barChartData = [\n            { data: statusValues, label: `Weekly Status for Project ${this.selectedProjectId}`, backgroundColor: backgroundColors }\n          ];\n        });\n    }\n  }\n\n  mapStatusToValue(status: string): number {\n    switch (status) {\n      case 'On Track': return 5;\n      case 'Slow': return 4;\n      case 'Risk': return 3;\n      case 'Deep Risk': return 2;\n      case 'Not Yet Started': return 1;\n      default: return 0;\n    }\n  }\n\n  getStatusColor(value: number): string {\n    switch (value) {\n      case 5: return 'green';\n      case 4: return 'orange';\n      case 3: return 'yellow';\n      case 2: return 'red';\n      case 1: return 'gray';\n      default: return 'gray';\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}