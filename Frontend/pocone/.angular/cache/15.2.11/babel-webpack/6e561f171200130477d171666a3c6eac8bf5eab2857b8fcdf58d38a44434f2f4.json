{"ast":null,"code":"import { StatusEnum } from '../enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/project.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AddStatusComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 46)(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 47);\n    i0.ɵɵlistener(\"input\", function AddStatusComponent_div_10_Template_input_input_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const label_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onTeamCompositionChange(label_r11, $event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const label_r11 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", label_r11, \":\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r0.status.teamComposition[label_r11] || 0);\n  }\n}\nfunction AddStatusComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 46)(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 47);\n    i0.ɵɵlistener(\"input\", function AddStatusComponent_div_12_Template_input_input_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const label_r14 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onTeamCompositionChange(label_r14, $event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const label_r14 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", label_r14, \":\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r1.status.teamComposition[label_r14] || 0);\n  }\n}\nfunction AddStatusComponent_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 48);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r17 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", status_r17.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(status_r17.key);\n  }\n}\nfunction AddStatusComponent_option_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 48);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r18 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", status_r18.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(status_r18.key);\n  }\n}\nfunction AddStatusComponent_option_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 48);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r19 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", status_r19.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(status_r19.key);\n  }\n}\nfunction AddStatusComponent_option_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 48);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r20 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", status_r20.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(status_r20.key);\n  }\n}\nfunction AddStatusComponent_option_69_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 48);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r21 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", status_r21.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(status_r21.key);\n  }\n}\nfunction AddStatusComponent_option_75_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 48);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r22 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", status_r22.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(status_r22.key);\n  }\n}\nfunction AddStatusComponent_option_81_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 48);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r23 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", status_r23.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(status_r23.key);\n  }\n}\nfunction AddStatusComponent_option_87_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 48);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r24 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", status_r24.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(status_r24.key);\n  }\n}\nfunction AddStatusComponent_option_93_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 48);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r25 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", status_r25.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(status_r25.key);\n  }\n}\nexport class AddStatusComponent {\n  constructor(projectService, router, route) {\n    this.projectService = projectService;\n    this.router = router;\n    this.route = route;\n    this.teamCompositionLabels = [\"QA Engineers\", \"Frontend Developers\", \"Scrum Master\", \"Backend Developers\", \"Technical Lead\", \"Marketing and Sales\", \"Stakeholders\", \"UI/UX Designers\", \"DevOps Engineers\", \"BA\"];\n    this.statusEnum = StatusEnum; // Enum reference for template binding\n    this.status = {\n      id: 0,\n      risksInDelivery: false,\n      teamComposition: {},\n      processFlows: StatusEnum.NOT_YET,\n      defectsReport: false,\n      numberOfDefects: 0,\n      dailyUpdates: StatusEnum.NOT_YET,\n      qaUpdates: StatusEnum.NOT_YET,\n      sonarqube: StatusEnum.NOT_YET,\n      weeklyReports: StatusEnum.NOT_YET,\n      closeClientCommunication: StatusEnum.NOT_YET,\n      gitReport: StatusEnum.NOT_YET,\n      escalation: StatusEnum.NOT_YET,\n      boardUpdates: StatusEnum.NOT_YET\n    };\n    this.projectId = 0;\n    this.teamCompositionString = '';\n    this.projects = [];\n    this.isUpdateMode = false;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      if (params['projectId']) {\n        this.projectId = +params['projectId'];\n        this.checkCurrentStatus();\n      }\n    });\n    this.route.url.subscribe(url => {\n      if (url.some(segment => segment.path === 'update-status')) {\n        this.isUpdateMode = true;\n        this.loadStatus();\n      }\n    });\n  }\n  checkCurrentStatus() {\n    this.projectService.getCurrentStatus(this.projectId).subscribe(response => {\n      if (response.status === 'Not Yet Started') {\n        this.isUpdateMode = false;\n        this.resetForm(); // Reset the form for a fresh status\n      } else {\n        this.isUpdateMode = true;\n        this.loadStatus(); // Load the existing status for update\n      }\n    });\n  }\n\n  loadStatus() {\n    this.projectService.getStatus(this.projectId).subscribe(fullStatus => {\n      this.status = fullStatus;\n      this.teamCompositionString = JSON.stringify(this.status.teamComposition); // Convert the team composition back to JSON string for display\n    });\n  }\n\n  onTeamCompositionChange(label, event) {\n    const inputElement = event.target;\n    this.status.teamComposition[label] = Number(inputElement.value);\n    this.teamCompositionString = JSON.stringify(this.status.teamComposition);\n  }\n  onSubmit() {\n    try {\n      // Check if the JSON string is not empty\n      if (this.teamCompositionString.trim()) {\n        this.status.teamComposition = JSON.parse(this.teamCompositionString);\n      } else {\n        throw new Error('Team composition JSON string is empty');\n      }\n      if (this.isUpdateMode) {\n        this.projectService.updateStatus(this.projectId, this.status).subscribe(response => {\n          console.log('Status updated:', response);\n        });\n      } else {\n        this.projectService.saveStatus(this.projectId, this.status).subscribe(response => {\n          console.log('Status added:', response);\n        });\n      }\n    } catch (e) {\n      console.error('Invalid JSON for team composition', e);\n    }\n  }\n  resetForm() {\n    this.status = {\n      id: 0,\n      risksInDelivery: false,\n      teamComposition: {},\n      processFlows: StatusEnum.NOT_YET,\n      defectsReport: false,\n      numberOfDefects: 0,\n      dailyUpdates: StatusEnum.NOT_YET,\n      qaUpdates: StatusEnum.NOT_YET,\n      sonarqube: StatusEnum.NOT_YET,\n      weeklyReports: StatusEnum.NOT_YET,\n      closeClientCommunication: StatusEnum.NOT_YET,\n      gitReport: StatusEnum.NOT_YET,\n      escalation: StatusEnum.NOT_YET,\n      boardUpdates: StatusEnum.NOT_YET\n    };\n    this.teamCompositionString = '';\n  }\n  goBack() {\n    this.router.navigate(['/all-projects']); // Adjust the route to your \"Project List\" page\n  }\n  static #_ = this.ɵfac = function AddStatusComponent_Factory(t) {\n    return new (t || AddStatusComponent)(i0.ɵɵdirectiveInject(i1.ProjectService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddStatusComponent,\n    selectors: [[\"app-add-status\"]],\n    decls: 100,\n    vars: 48,\n    consts: [[1, \"container\", \"mt-4\"], [1, \"text-center\", \"title\"], [1, \"form-container\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"teamComposition\"], [1, \"team-composition-container\"], [1, \"team-composition-left\"], [\"class\", \"team-composition-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"team-composition-right\"], [1, \"two-column-container\"], [1, \"column\"], [\"for\", \"risksInDelivery\"], [1, \"radio-group\"], [\"type\", \"radio\", \"id\", \"risksInDeliveryYes\", \"name\", \"risksInDelivery\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"for\", \"risksInDeliveryYes\"], [\"type\", \"radio\", \"id\", \"risksInDeliveryNo\", \"name\", \"risksInDelivery\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"for\", \"risksInDeliveryNo\"], [\"for\", \"processFlows\"], [\"id\", \"processFlows\", \"name\", \"processFlows\", \"required\", \"\", 1, \"small-input\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"numberOfDefects\"], [\"id\", \"numberOfDefects\", \"type\", \"number\", \"name\", \"numberOfDefects\", 1, \"small-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"dailyUpdates\"], [\"id\", \"dailyUpdates\", \"name\", \"dailyUpdates\", \"required\", \"\", 1, \"small-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"qaUpdates\"], [\"id\", \"qaUpdates\", \"name\", \"qaUpdates\", \"required\", \"\", 1, \"small-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"sonarqube\"], [\"id\", \"sonarqube\", \"name\", \"sonarqube\", \"required\", \"\", 1, \"small-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"defectsReport\"], [\"type\", \"radio\", \"id\", \"defectsReportYes\", \"name\", \"defectsReport\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"for\", \"defectsReportYes\"], [\"type\", \"radio\", \"id\", \"defectsReportNo\", \"name\", \"defectsReport\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"for\", \"defectsReportNo\"], [\"for\", \"weeklyReports\"], [\"id\", \"weeklyReports\", \"name\", \"weeklyReports\", \"required\", \"\", 1, \"small-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"closeClientCommunication\"], [\"id\", \"closeClientCommunication\", \"name\", \"closeClientCommunication\", \"required\", \"\", 1, \"small-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"gitReport\"], [\"id\", \"gitReport\", \"name\", \"gitReport\", \"required\", \"\", 1, \"small-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"escalation\"], [\"id\", \"escalation\", \"name\", \"escalation\", \"required\", \"\", 1, \"smal-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"boardUpdates\"], [\"id\", \"boardUpdates\", \"name\", \"boardUpdates\", \"required\", \"\", 1, \"smal-input\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"team-composition-item\"], [\"type\", \"number\", 1, \"small-input\", 3, \"value\", \"input\"], [3, \"ngValue\"]],\n    template: function AddStatusComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Add Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function AddStatusComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Team Composition\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7);\n        i0.ɵɵtemplate(10, AddStatusComponent_div_10_Template, 4, 2, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 9);\n        i0.ɵɵtemplate(12, AddStatusComponent_div_12_Template, 4, 2, \"div\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"div\", 4)(14, \"div\", 10)(15, \"div\", 11)(16, \"div\", 4)(17, \"label\", 12);\n        i0.ɵɵtext(18, \"Risk in Delivery\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 13)(20, \"input\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function AddStatusComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.status.risksInDelivery = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"label\", 15);\n        i0.ɵɵtext(22, \"Yes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"input\", 16);\n        i0.ɵɵlistener(\"ngModelChange\", function AddStatusComponent_Template_input_ngModelChange_23_listener($event) {\n          return ctx.status.risksInDelivery = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"label\", 17);\n        i0.ɵɵtext(25, \"No\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 4)(27, \"label\", 18);\n        i0.ɵɵtext(28, \"Process Flows\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"select\", 19);\n        i0.ɵɵlistener(\"ngModelChange\", function AddStatusComponent_Template_select_ngModelChange_29_listener($event) {\n          return ctx.status.processFlows = $event;\n        });\n        i0.ɵɵtemplate(30, AddStatusComponent_option_30_Template, 2, 2, \"option\", 20);\n        i0.ɵɵpipe(31, \"keyvalue\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"div\", 4)(33, \"label\", 21);\n        i0.ɵɵtext(34, \"Number of Defects\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"input\", 22);\n        i0.ɵɵlistener(\"ngModelChange\", function AddStatusComponent_Template_input_ngModelChange_35_listener($event) {\n          return ctx.status.numberOfDefects = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(36, \"div\", 4)(37, \"label\", 23);\n        i0.ɵɵtext(38, \"Daily Updates\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"select\", 24);\n        i0.ɵɵlistener(\"ngModelChange\", function AddStatusComponent_Template_select_ngModelChange_39_listener($event) {\n          return ctx.status.dailyUpdates = $event;\n        });\n        i0.ɵɵtemplate(40, AddStatusComponent_option_40_Template, 2, 2, \"option\", 20);\n        i0.ɵɵpipe(41, \"keyvalue\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(42, \"div\", 4)(43, \"label\", 25);\n        i0.ɵɵtext(44, \"QA Updates\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"select\", 26);\n        i0.ɵɵlistener(\"ngModelChange\", function AddStatusComponent_Template_select_ngModelChange_45_listener($event) {\n          return ctx.status.qaUpdates = $event;\n        });\n        i0.ɵɵtemplate(46, AddStatusComponent_option_46_Template, 2, 2, \"option\", 20);\n        i0.ɵɵpipe(47, \"keyvalue\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(48, \"div\", 4)(49, \"label\", 27);\n        i0.ɵɵtext(50, \"Sonarqube\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"select\", 28);\n        i0.ɵɵlistener(\"ngModelChange\", function AddStatusComponent_Template_select_ngModelChange_51_listener($event) {\n          return ctx.status.sonarqube = $event;\n        });\n        i0.ɵɵtemplate(52, AddStatusComponent_option_52_Template, 2, 2, \"option\", 20);\n        i0.ɵɵpipe(53, \"keyvalue\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(54, \"div\", 11)(55, \"div\", 4)(56, \"label\", 29);\n        i0.ɵɵtext(57, \"Defects Report\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"div\", 13)(59, \"input\", 30);\n        i0.ɵɵlistener(\"ngModelChange\", function AddStatusComponent_Template_input_ngModelChange_59_listener($event) {\n          return ctx.status.defectsReport = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"label\", 31);\n        i0.ɵɵtext(61, \"Yes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"input\", 32);\n        i0.ɵɵlistener(\"ngModelChange\", function AddStatusComponent_Template_input_ngModelChange_62_listener($event) {\n          return ctx.status.defectsReport = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"label\", 33);\n        i0.ɵɵtext(64, \"No\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(65, \"div\", 4)(66, \"label\", 34);\n        i0.ɵɵtext(67, \"Weekly Reports\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"select\", 35);\n        i0.ɵɵlistener(\"ngModelChange\", function AddStatusComponent_Template_select_ngModelChange_68_listener($event) {\n          return ctx.status.weeklyReports = $event;\n        });\n        i0.ɵɵtemplate(69, AddStatusComponent_option_69_Template, 2, 2, \"option\", 20);\n        i0.ɵɵpipe(70, \"keyvalue\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(71, \"div\", 4)(72, \"label\", 36);\n        i0.ɵɵtext(73, \"Close Client Communication\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"select\", 37);\n        i0.ɵɵlistener(\"ngModelChange\", function AddStatusComponent_Template_select_ngModelChange_74_listener($event) {\n          return ctx.status.closeClientCommunication = $event;\n        });\n        i0.ɵɵtemplate(75, AddStatusComponent_option_75_Template, 2, 2, \"option\", 20);\n        i0.ɵɵpipe(76, \"keyvalue\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(77, \"div\", 4)(78, \"label\", 38);\n        i0.ɵɵtext(79, \"Git Report\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(80, \"select\", 39);\n        i0.ɵɵlistener(\"ngModelChange\", function AddStatusComponent_Template_select_ngModelChange_80_listener($event) {\n          return ctx.status.gitReport = $event;\n        });\n        i0.ɵɵtemplate(81, AddStatusComponent_option_81_Template, 2, 2, \"option\", 20);\n        i0.ɵɵpipe(82, \"keyvalue\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(83, \"div\", 4)(84, \"label\", 40);\n        i0.ɵɵtext(85, \"Escalation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(86, \"select\", 41);\n        i0.ɵɵlistener(\"ngModelChange\", function AddStatusComponent_Template_select_ngModelChange_86_listener($event) {\n          return ctx.status.escalation = $event;\n        });\n        i0.ɵɵtemplate(87, AddStatusComponent_option_87_Template, 2, 2, \"option\", 20);\n        i0.ɵɵpipe(88, \"keyvalue\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(89, \"div\", 4)(90, \"label\", 42);\n        i0.ɵɵtext(91, \"Board Updates\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(92, \"select\", 43);\n        i0.ɵɵlistener(\"ngModelChange\", function AddStatusComponent_Template_select_ngModelChange_92_listener($event) {\n          return ctx.status.boardUpdates = $event;\n        });\n        i0.ɵɵtemplate(93, AddStatusComponent_option_93_Template, 2, 2, \"option\", 20);\n        i0.ɵɵpipe(94, \"keyvalue\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(95, \"button\", 44);\n        i0.ɵɵtext(96);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(97, \"br\");\n        i0.ɵɵelementStart(98, \"button\", 45);\n        i0.ɵɵlistener(\"click\", function AddStatusComponent_Template_button_click_98_listener() {\n          return ctx.goBack();\n        });\n        i0.ɵɵtext(99, \"Back\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.teamCompositionLabels.slice(0, 5));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.teamCompositionLabels.slice(5, 10));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.status.risksInDelivery)(\"value\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.status.risksInDelivery)(\"value\", false);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.status.processFlows);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(31, 30, ctx.statusEnum));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.status.numberOfDefects);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.status.dailyUpdates);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(41, 32, ctx.statusEnum));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.status.qaUpdates);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(47, 34, ctx.statusEnum));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.status.sonarqube);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(53, 36, ctx.statusEnum));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.status.defectsReport)(\"value\", true);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.status.defectsReport)(\"value\", false);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.status.weeklyReports);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(70, 38, ctx.statusEnum));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.status.closeClientCommunication);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(76, 40, ctx.statusEnum));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.status.gitReport);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(82, 42, ctx.statusEnum));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.status.escalation);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(88, 44, ctx.statusEnum));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.status.boardUpdates);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(94, 46, ctx.statusEnum));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.isUpdateMode ? \"Update Status\" : \"Add Status\");\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.RadioControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i3.KeyValuePipe],\n    styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  margin-top: 20px;\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n  color: blue;\\n  font-size: 30px;\\n  margin-bottom: 20px;\\n}\\nlabel[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  text-align: left;\\n  color: blue;\\n  font-weight: bold;\\n  margin-bottom: 10px; \\n}\\n\\n.form-container[_ngcontent-%COMP%] {\\n  width: 1100px;\\n  padding: 20px;\\n  border: 30px solid lightskyblue;\\n  background-color: whitesmoke;\\n  background-image: url('/assets/backgroundimg.jpg');\\n  background-size: cover;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n  border-radius: 20px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  margin-bottom: 20px;\\n}\\n\\n.team-composition-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  gap: 20px;\\n}\\n\\n.team-composition-left[_ngcontent-%COMP%], .team-composition-right[_ngcontent-%COMP%] {\\n  flex: 1;\\n}\\n\\n.team-composition-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  margin-bottom: 15px;\\n}\\n\\n.team-composition-item[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  width: 200px; \\n  margin-right: 15px; \\n  font-weight: bold;\\n}\\n\\n\\n\\n\\n.small-input[_ngcontent-%COMP%] {\\n  margin-left: 10px;\\n  width: 100px;\\n}\\n\\n.two-column-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  gap: 20px;\\n}\\n\\n.column[_ngcontent-%COMP%] {\\n  flex: 1;\\n}\\n\\n.radio-group[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  height: 38px;\\n  border-radius: 10px;\\n  color: white;\\n  background-color: blue;\\n  display: block;\\n  margin: 10px auto;\\n  border: none;\\n  cursor: pointer;\\n}\\n\\nbutton.btn-secondary[_ngcontent-%COMP%] {\\n  background-color: grey;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRkLXN0YXR1cy9hZGQtc3RhdHVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsZUFBZTtFQUNmLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsaUJBQWlCO0VBQ2pCLG1CQUFtQixFQUFFLGtDQUFrQztBQUN6RDs7QUFFQTtFQUNFLGFBQWE7RUFDYixhQUFhO0VBQ2IsK0JBQStCO0VBQy9CLDRCQUE0QjtFQUM1QixrREFBa0Q7RUFDbEQsc0JBQXNCO0VBQ3RCLDRCQUE0QjtFQUM1QiwyQkFBMkI7RUFDM0Isd0NBQXdDO0VBQ3hDLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixTQUFTO0FBQ1g7O0FBRUE7RUFDRSxPQUFPO0FBQ1Q7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFlBQVksRUFBRSwyQkFBMkI7RUFDekMsa0JBQWtCLEVBQUUsa0NBQWtDO0VBQ3RELGlCQUFpQjtBQUNuQjs7QUFFQSxrQkFBa0I7OztBQUdsQjtFQUNFLGlCQUFpQjtFQUNqQixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsOEJBQThCO0VBQzlCLFNBQVM7QUFDWDs7QUFFQTtFQUNFLE9BQU87QUFDVDs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsU0FBUztBQUNYOztBQUVBO0VBQ0UsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osc0JBQXNCO0VBQ3RCLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsWUFBWTtFQUNaLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxzQkFBc0I7QUFDeEIiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjBweDtcbn1cblxuLnRpdGxlIHtcbiAgY29sb3I6IGJsdWU7XG4gIGZvbnQtc2l6ZTogMzBweDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cbmxhYmVsIHtcbiAgZm9udC1zaXplOiAyMHB4O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBjb2xvcjogYmx1ZTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7IC8qIFNwYWNlIGJldHdlZW4gbGFiZWwgYW5kIGlucHV0ICovXG59XG5cbi5mb3JtLWNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMTAwcHg7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGJvcmRlcjogMzBweCBzb2xpZCBsaWdodHNreWJsdWU7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnL2Fzc2V0cy9iYWNrZ3JvdW5kaW1nLmpwZycpO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG59XG5cbi5mb3JtLWdyb3VwIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLnRlYW0tY29tcG9zaXRpb24tY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBnYXA6IDIwcHg7XG59XG5cbi50ZWFtLWNvbXBvc2l0aW9uLWxlZnQsIC50ZWFtLWNvbXBvc2l0aW9uLXJpZ2h0IHtcbiAgZmxleDogMTtcbn1cblxuLnRlYW0tY29tcG9zaXRpb24taXRlbSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XG59XG5cbi50ZWFtLWNvbXBvc2l0aW9uLWl0ZW0gbGFiZWwge1xuICB3aWR0aDogMjAwcHg7IC8qIEZpeGVkIHdpZHRoIGZvciBsYWJlbHMgKi9cbiAgbWFyZ2luLXJpZ2h0OiAxNXB4OyAvKiBTcGFjZSBiZXR3ZWVuIGxhYmVsIGFuZCBpbnB1dCAqL1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyogSW5wdXQgc3R5bGluZyAqL1xuXG5cbi5zbWFsbC1pbnB1dCB7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICB3aWR0aDogMTAwcHg7XG59XG5cbi50d28tY29sdW1uLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgZ2FwOiAyMHB4O1xufVxuXG4uY29sdW1uIHtcbiAgZmxleDogMTtcbn1cblxuLnJhZGlvLWdyb3VwIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ2FwOiAxMHB4O1xufVxuXG5idXR0b24ge1xuICBoZWlnaHQ6IDM4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMTBweCBhdXRvO1xuICBib3JkZXI6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuYnV0dG9uLmJ0bi1zZWNvbmRhcnkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmV5O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["StatusEnum","i0","AddStatusComponent","constructor","projectService","router","route","id","risksInDelivery","teamComposition","processFlows","NOT_YET","defectsReport","numberOfDefects","dailyUpdates","qaUpdates","sonarqube","weeklyReports","closeClientCommunication","gitReport","escalation","boardUpdates","ngOnInit","params","subscribe","projectId","checkCurrentStatus","url","some","segment","path","isUpdateMode","loadStatus","getCurrentStatus","response","status","resetForm","getStatus","fullStatus","teamCompositionString","JSON","stringify","onTeamCompositionChange","label","event","inputElement","target","Number","value","onSubmit","trim","parse","Error","updateStatus","console","log","saveStatus","e","error","goBack","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/decodersmdu/pocone/src/app/add-status/add-status.component.ts","/home/decodersmdu/pocone/src/app/add-status/add-status.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { StatusEnum } from '../enum'\nimport { Status } from '../Models/status.model'\nimport { ProjectService } from '../Services/project.service'\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Project } from '../Models/project.model';\n\n@Component({\n  selector: 'app-add-status',\n  templateUrl: './add-status.component.html',\n  styleUrls: ['./add-status.component.css']\n})\nexport class AddStatusComponent implements OnInit {\n  teamCompositionLabels = [\n    \"QA Engineers\", \n    \"Frontend Developers\", \n    \"Scrum Master\", \n    \"Backend Developers\", \n    \"Technical Lead\", \n    \"Marketing and Sales\", \n    \"Stakeholders\", \n    \"UI/UX Designers\", \n    \"DevOps Engineers\", \n    \"BA\"\n  ];\n  statusEnum = StatusEnum;  // Enum reference for template binding\n\n  status: Status = {\n    id:0,\n    risksInDelivery: false,\n    teamComposition: {},\n    processFlows: StatusEnum.NOT_YET,\n    defectsReport: false,\n    numberOfDefects: 0,\n    dailyUpdates: StatusEnum.NOT_YET,\n    qaUpdates: StatusEnum.NOT_YET,\n    sonarqube: StatusEnum.NOT_YET,\n    weeklyReports: StatusEnum.NOT_YET,\n    closeClientCommunication: StatusEnum.NOT_YET,\n    gitReport: StatusEnum.NOT_YET,\n    escalation: StatusEnum.NOT_YET,\n    boardUpdates: StatusEnum.NOT_YET\n  };\n  projectId: number = 0;\n  teamCompositionString: string = '';\n  projects: Project[] =[];\n  isUpdateMode: boolean = false;\n  \n \n  constructor(private projectService: ProjectService, private router: Router, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      if (params['projectId']) {\n        this.projectId = +params['projectId'];\n        this.checkCurrentStatus();\n      }\n    });\n  \n    this.route.url.subscribe(url => {\n      if (url.some(segment => segment.path === 'update-status')) {\n        this.isUpdateMode = true;\n        this.loadStatus();\n      }\n    });\n  }\n  checkCurrentStatus(): void {\n    this.projectService.getCurrentStatus(this.projectId).subscribe(response => {\n      if (response.status === 'Not Yet Started') {\n        this.isUpdateMode = false;\n        this.resetForm(); // Reset the form for a fresh status\n      } else {\n        this.isUpdateMode = true;\n        this.loadStatus(); // Load the existing status for update\n      }\n    });\n  }\n  loadStatus(): void {\n    this.projectService.getStatus(this.projectId).subscribe(fullStatus => {\n      this.status = fullStatus;\n      this.teamCompositionString = JSON.stringify(this.status.teamComposition); // Convert the team composition back to JSON string for display\n    });\n  }\n  onTeamCompositionChange(label: string, event: Event): void{\n    const inputElement = event.target as HTMLInputElement;\n    this.status.teamComposition[label] = Number(inputElement.value);\n    this.teamCompositionString = JSON.stringify(this.status.teamComposition); \n  }\n  \n  \n\nonSubmit() {\n  try {\n    // Check if the JSON string is not empty\n    if (this.teamCompositionString.trim()) {\n      this.status.teamComposition = JSON.parse(this.teamCompositionString);\n    } else {\n      throw new Error('Team composition JSON string is empty');\n    }\n\n    if (this.isUpdateMode) {\n      this.projectService.updateStatus(this.projectId, this.status).subscribe(response => {\n        console.log('Status updated:', response);\n        \n      });\n    } else {\n      this.projectService.saveStatus(this.projectId, this.status).subscribe(response => {\n        console.log('Status added:', response);\n        \n      });\n    }\n  } catch (e) {\n    console.error('Invalid JSON for team composition', e);\n  }\n}\n \nresetForm(): void {\n  this.status = {\n    id: 0,\n    risksInDelivery: false,\n    teamComposition: {},\n    processFlows: StatusEnum.NOT_YET,\n    defectsReport: false,\n    numberOfDefects: 0,\n    dailyUpdates: StatusEnum.NOT_YET,\n    qaUpdates: StatusEnum.NOT_YET,\n    sonarqube: StatusEnum.NOT_YET,\n    weeklyReports: StatusEnum.NOT_YET,\n    closeClientCommunication: StatusEnum.NOT_YET,\n    gitReport: StatusEnum.NOT_YET,\n    escalation: StatusEnum.NOT_YET,\n    boardUpdates: StatusEnum.NOT_YET\n  };\n  this.teamCompositionString = '';\n}\ngoBack() {\n  this.router.navigate(['/all-projects']); // Adjust the route to your \"Project List\" page\n}\n}\n","<!-- <div class=\"container mt-4\">\n    <h2 class=\"text-center title\">Add status</h2>\n    <div class=\"form-container\">\n      \n      <form (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <label for=\"teamComposition\">Team Composition</label><br>\n            <div class=\"team-composition-container\">\n                <div class=\"team-composition-left\">\n                    <div *ngFor=\"let label of teamCompositionLabels.slice(0, 5)\" class=\"team-composition-item\">\n                        <div class=\"team-composition-row\">\n                            <label>{{ label }}:</label>\n                            <input type=\"number\" [value]=\"status.teamComposition[label] || 0\" \n                                   (input)=\"onTeamCompositionChange(label, $event)\" class=\"small-input\">\n                        </div>\n                    </div>\n                </div>\n                <div class=\"team-composition-right\">\n                    <div *ngFor=\"let label of teamCompositionLabels.slice(5, 10)\" class=\"team-composition-item\">\n                        <div class=\"team-composition-row\">\n                            <label>{{ label }}:</label>\n                            <input type=\"number\" [value]=\"status.teamComposition[label] || 0\" \n                                   (input)=\"onTeamCompositionChange(label, $event)\" class=\"small-input\">\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n  <div class=\"form-group\" style=\"display: flex; flex-direction: column; align-items: flex-start;\">\n    <div class=\"two-column-container\">\n      <div class=\"column1\">\n        <div class=\"form-group\">\n          <label for=\"risksInDelivery\">Risk in Delivery</label>\n          <div class=\"radio-group\">\n            <input type=\"radio\" id=\"risksInDeliveryYes\" name=\"risksInDelivery\" [(ngModel)]=\"status.risksInDelivery\" [value]=\"true\">\n            <label for=\"risksInDeliveryYes\" style=\"margin-left: 5px;\">Yes</label>\n            <input type=\"radio\" id=\"risksInDeliveryNo\" name=\"risksInDelivery\" [(ngModel)]=\"status.risksInDelivery\" [value]=\"false\">\n            <label for=\"risksInDeliveryNo\" style=\"margin-left: 5px;\">No</label>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"processFlows\">Process Flows</label>\n          <select id=\"processFlows\" [(ngModel)]=\"status.processFlows\" name=\"processFlows\" required>\n            <option *ngFor=\"let status of statusEnum | keyvalue\" [ngValue]=\"status.value\">{{status.key}}</option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"numberOfDefects\">Number of Defects</label>\n          <input id=\"numberOfDefects\" type=\"number\" [(ngModel)]=\"status.numberOfDefects\" name=\"numberOfDefects\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"dailyUpdates\">Daily Updates</label>\n          <select id=\"dailyUpdates\" [(ngModel)]=\"status.dailyUpdates\" name=\"dailyUpdates\" required>\n            <option *ngFor=\"let status of statusEnum | keyvalue\" [ngValue]=\"status.value\">{{status.key}}</option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"qaUpdates\">QA Updates</label>\n          <select id=\"qaUpdates\" [(ngModel)]=\"status.qaUpdates\" name=\"qaUpdates\" required>\n            <option *ngFor=\"let status of statusEnum | keyvalue\" [ngValue]=\"status.value\">{{status.key}}</option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"sonarqube\">Sonarqube</label>\n          <select id=\"sonarqube\" [(ngModel)]=\"status.sonarqube\" name=\"sonarqube\" required>\n            <option *ngFor=\"let status of statusEnum | keyvalue\" [ngValue]=\"status.value\">{{status.key}}</option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"column2\">\n        <div class=\"form-group\">\n          <label for=\"defectsReport\">Defects Report</label>\n          <div class=\"radio-group\">\n            <input type=\"radio\" id=\"defectsReportYes\" name=\"defectsReport\" [(ngModel)]=\"status.defectsReport\" [value]=\"true\">\n            <label for=\"defectsReportYes\" style=\"margin-left: 5px;\">Yes</label>\n            <input type=\"radio\" id=\"defectsReportNo\" name=\"defectsReport\" [(ngModel)]=\"status.defectsReport\" [value]=\"false\">\n            <label for=\"defectsReportNo\" style=\"margin-left: 5px;\">No</label>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"weeklyReports\">Weekly Reports</label>\n          <select id=\"weeklyReports\" [(ngModel)]=\"status.weeklyReports\" name=\"weeklyReports\" required>\n            <option *ngFor=\"let status of statusEnum | keyvalue\" [ngValue]=\"status.value\">{{status.key}}</option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"closeClientCommunication\">Close Client Communication</label>\n          <select id=\"closeClientCommunication\" [(ngModel)]=\"status.closeClientCommunication\" name=\"closeClientCommunication\" required>\n            <option *ngFor=\"let status of statusEnum | keyvalue\" [ngValue]=\"status.value\">{{status.key}}</option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"gitReport\">Git Report</label>\n          <select id=\"gitReport\" [(ngModel)]=\"status.gitReport\" name=\"gitReport\" required>\n            <option *ngFor=\"let status of statusEnum | keyvalue\" [ngValue]=\"status.value\">{{status.key}}</option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"escalation\">Escalation</label>\n          <select id=\"escalation\" [(ngModel)]=\"status.escalation\" name=\"escalation\" required>\n            <option *ngFor=\"let status of statusEnum | keyvalue\" [ngValue]=\"status.value\">{{status.key}}</option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"boardUpdates\">Board Updates</label>\n          <select id=\"boardUpdates\" [(ngModel)]=\"status.boardUpdates\" name=\"boardUpdates\" required>\n            <option *ngFor=\"let status of statusEnum | keyvalue\" [ngValue]=\"status.value\">{{status.key}}</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  </div>\n\n    <button type=\"submit\">{{ isUpdateMode ? 'Update Status' : 'Add Status' }}</button>\n    <br>\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"goBack()\">Back</button>\n    </form>\n    </div>\n    </div> -->\n\n\n    <div class=\"container mt-4\">\n      <h2 class=\"text-center title\">Add Status</h2>\n      <div class=\"form-container\">\n          <form (ngSubmit)=\"onSubmit()\">\n              <div class=\"form-group\">\n                  <label for=\"teamComposition\">Team Composition</label>\n                  <div class=\"team-composition-container\">\n                      <div class=\"team-composition-left\">\n                          <div *ngFor=\"let label of teamCompositionLabels.slice(0, 5)\" class=\"team-composition-item\">\n                              <label>{{ label }}:</label>\n                              <input type=\"number\" [value]=\"status.teamComposition[label] || 0\" \n                                     (input)=\"onTeamCompositionChange(label, $event)\" class=\"small-input\">\n                          </div>\n                      </div>\n                      <div class=\"team-composition-right\">\n                          <div *ngFor=\"let label of teamCompositionLabels.slice(5, 10)\" class=\"team-composition-item\">\n                              <label>{{ label }}:</label>\n                              <input type=\"number\" [value]=\"status.teamComposition[label] || 0\" \n                                     (input)=\"onTeamCompositionChange(label, $event)\" class=\"small-input\">\n                          </div>\n                      </div>\n                  </div>\n              </div>\n  \n              <div class=\"form-group\">\n                  <div class=\"two-column-container\">\n                      <!-- Left Column -->\n                      <div class=\"column\">\n                          <div class=\"form-group\">\n                              <label for=\"risksInDelivery\">Risk in Delivery</label>\n                              <div class=\"radio-group\">\n                                  <input type=\"radio\" id=\"risksInDeliveryYes\" name=\"risksInDelivery\" [(ngModel)]=\"status.risksInDelivery\" [value]=\"true\">\n                                  <label for=\"risksInDeliveryYes\">Yes</label>\n                                  <input type=\"radio\" id=\"risksInDeliveryNo\" name=\"risksInDelivery\" [(ngModel)]=\"status.risksInDelivery\" [value]=\"false\">\n                                  <label for=\"risksInDeliveryNo\">No</label>\n                              </div>\n                          </div>\n  \n                          <div class=\"form-group\">\n                              <label for=\"processFlows\">Process Flows</label>\n                              <select id=\"processFlows\" [(ngModel)]=\"status.processFlows\" name=\"processFlows\" required class=\"small-input\">\n                                  <option *ngFor=\"let status of statusEnum | keyvalue\" [ngValue]=\"status.value\">{{status.key}}</option>\n                              </select>\n                          </div>\n  \n                          <div class=\"form-group\">\n                              <label for=\"numberOfDefects\">Number of Defects</label>\n                              <input id=\"numberOfDefects\" type=\"number\" [(ngModel)]=\"status.numberOfDefects\" name=\"numberOfDefects\" class=\"small-input\">\n                          </div>\n  \n                          <div class=\"form-group\">\n                              <label for=\"dailyUpdates\">Daily Updates</label>\n                              <select id=\"dailyUpdates\" [(ngModel)]=\"status.dailyUpdates\" name=\"dailyUpdates\" required class=\"small-input\">\n                                  <option *ngFor=\"let status of statusEnum | keyvalue\" [ngValue]=\"status.value\">{{status.key}}</option>\n                              </select>\n                          </div>\n  \n                          <div class=\"form-group\">\n                              <label for=\"qaUpdates\">QA Updates</label>\n                              <select id=\"qaUpdates\" [(ngModel)]=\"status.qaUpdates\" name=\"qaUpdates\" required class=\"small-input\">\n                                  <option *ngFor=\"let status of statusEnum | keyvalue\" [ngValue]=\"status.value\">{{status.key}}</option>\n                              </select>\n                          </div>\n  \n                          <div class=\"form-group\">\n                              <label for=\"sonarqube\">Sonarqube</label>\n                              <select id=\"sonarqube\" [(ngModel)]=\"status.sonarqube\" name=\"sonarqube\" required class=\"small-input\">\n                                  <option *ngFor=\"let status of statusEnum | keyvalue\" [ngValue]=\"status.value\">{{status.key}}</option>\n                              </select>\n                          </div>\n                      </div>\n  \n                      <!-- Right Column -->\n                      <div class=\"column\">\n                          <div class=\"form-group\">\n                              <label for=\"defectsReport\">Defects Report</label>\n                              <div class=\"radio-group\">\n                                  <input type=\"radio\" id=\"defectsReportYes\" name=\"defectsReport\" [(ngModel)]=\"status.defectsReport\" [value]=\"true\">\n                                  <label for=\"defectsReportYes\">Yes</label>\n                                  <input type=\"radio\" id=\"defectsReportNo\" name=\"defectsReport\" [(ngModel)]=\"status.defectsReport\" [value]=\"false\">\n                                  <label for=\"defectsReportNo\">No</label>\n                              </div>\n                          </div>\n  \n                          <div class=\"form-group\">\n                              <label for=\"weeklyReports\">Weekly Reports</label>\n                              <select id=\"weeklyReports\" [(ngModel)]=\"status.weeklyReports\" name=\"weeklyReports\" required class=\"small-input\">\n                                  <option *ngFor=\"let status of statusEnum | keyvalue\" [ngValue]=\"status.value\">{{status.key}}</option>\n                              </select>\n                          </div>\n  \n                          <div class=\"form-group\">\n                              <label for=\"closeClientCommunication\">Close Client Communication</label>\n                              <select id=\"closeClientCommunication\" [(ngModel)]=\"status.closeClientCommunication\" name=\"closeClientCommunication\" required class=\"small-input\">\n                                  <option *ngFor=\"let status of statusEnum | keyvalue\" [ngValue]=\"status.value\">{{status.key}}</option>\n                              </select>\n                          </div>\n  \n                          <div class=\"form-group\">\n                              <label for=\"gitReport\">Git Report</label>\n                              <select id=\"gitReport\" [(ngModel)]=\"status.gitReport\" name=\"gitReport\" required class=\"small-input\">\n                                  <option *ngFor=\"let status of statusEnum | keyvalue\" [ngValue]=\"status.value\">{{status.key}}</option>\n                              </select>\n                          </div>\n  \n                          <div class=\"form-group\">\n                              <label for=\"escalation\">Escalation</label>\n                              <select id=\"escalation\" [(ngModel)]=\"status.escalation\" name=\"escalation\" required class=\"smal-input\">\n                                  <option *ngFor=\"let status of statusEnum | keyvalue\" [ngValue]=\"status.value\">{{status.key}}</option>\n                              </select>\n                          </div>\n  \n                          <div class=\"form-group\">\n                              <label for=\"boardUpdates\">Board Updates</label>\n                              <select id=\"boardUpdates\" [(ngModel)]=\"status.boardUpdates\" name=\"boardUpdates\" required class=\"smal-input\">\n                                  <option *ngFor=\"let status of statusEnum | keyvalue\" [ngValue]=\"status.value\">{{status.key}}</option>\n                              </select>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n  \n              <button type=\"submit\">{{ isUpdateMode ? 'Update Status' : 'Add Status' }}</button>\n              <br>\n              <button type=\"button\" class=\"btn btn-secondary\" (click)=\"goBack()\">Back</button>\n          </form>\n      </div>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}