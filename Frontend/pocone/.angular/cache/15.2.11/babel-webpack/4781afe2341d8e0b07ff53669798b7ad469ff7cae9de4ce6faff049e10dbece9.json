{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { StatusEnum } from '../enum';\nlet UpdateProjectComponent = class UpdateProjectComponent {\n  constructor(projectService, route, router) {\n    this.projectService = projectService;\n    this.route = route;\n    this.router = router;\n    this.statusEnum = StatusEnum;\n    this.techStackInput = '';\n    this.id = 0;\n    this.project = {\n      name: '',\n      lead: '',\n      techStack: '',\n      projectStatus: '',\n      startdate: '',\n      deadline: '',\n      totalPeopleAllocated: 0,\n      actualAllocationSOW: 0,\n      adrItemDocumentation: StatusEnum.NOT_YET,\n      c4Documentation: StatusEnum.NOT_YET,\n      salesHandover: StatusEnum.NOT_YET,\n      architectureHandover: StatusEnum.NOT_YET,\n      decodersRepository: StatusEnum.NOT_YET,\n      processAdoptionLatestVersion: StatusEnum.NOT_YET,\n      projectKickoff: StatusEnum.NOT_YET,\n      projectSharedDocumentRepository: StatusEnum.NOT_YET\n    };\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.projectService.getProjectById(this.id).subscribe(data => {\n      this.project = data;\n    }, error => console.log(error));\n  }\n  onSubmit() {\n    this.projectService.updateProject(this.id, this.project).subscribe(data => {\n      this.goToProjectList();\n    }, error => console.log(error));\n  }\n  goBack() {\n    this.router.navigate(['/all-projects']);\n  }\n  goToProjectList() {\n    this.router.navigate(['/all-projects']);\n  }\n};\nUpdateProjectComponent = __decorate([Component({\n  selector: 'app-update-project',\n  templateUrl: './update-project.component.html',\n  styleUrls: ['./update-project.component.css']\n})], UpdateProjectComponent);\nexport { UpdateProjectComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAGjD,SAASC,UAAU,QAAQ,SAAS;AAQ7B,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAyBjCC,YAAoBC,cAA8B,EAAUC,KAAoB,EAAUC,MAAc;IAApF,mBAAc,GAAdF,cAAc;IAA0B,UAAK,GAALC,KAAK;IAAyB,WAAM,GAANC,MAAM;IAxBhG,eAAU,GAAGL,UAAU;IACzB,mBAAc,GAAW,EAAE;IAC3B,OAAE,GAAQ,CAAC;IAET,YAAO,GAAY;MAEjBM,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,EAAE;MACRC,SAAS,EAAE,EAAE;MACbC,aAAa,EAAE,EAAE;MACjBC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,oBAAoB,EAAE,CAAC;MACvBC,mBAAmB,EAAE,CAAC;MACtBC,oBAAoB,EAAEd,UAAU,CAACe,OAAO;MACxCC,eAAe,EAAEhB,UAAU,CAACe,OAAO;MACnCE,aAAa,EAAEjB,UAAU,CAACe,OAAO;MACjCG,oBAAoB,EAAElB,UAAU,CAACe,OAAO;MACxCI,kBAAkB,EAAEnB,UAAU,CAACe,OAAO;MACtCK,4BAA4B,EAAEpB,UAAU,CAACe,OAAO;MAChDM,cAAc,EAAErB,UAAU,CAACe,OAAO;MAClCO,+BAA+B,EAAEtB,UAAU,CAACe;KAE7C;EAC0G;EAI3GQ,QAAQ;IACN,IAAI,CAACC,EAAE,GAAG,IAAI,CAACpB,KAAK,CAACqB,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAE1C,IAAI,CAACvB,cAAc,CAACwB,cAAc,CAAC,IAAI,CAACH,EAAE,CAAC,CAACI,SAAS,CAACC,IAAI,IAAG;MAC3D,IAAI,CAACC,OAAO,GAAGD,IAAI;IACrB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACjC;EAEAG,QAAQ;IACN,IAAI,CAAC/B,cAAc,CAACgC,aAAa,CAAC,IAAI,CAACX,EAAE,EAAE,IAAI,CAACM,OAAO,CAAC,CAACF,SAAS,CAAEC,IAAI,IAAG;MACzE,IAAI,CAACO,eAAe,EAAE;IACxB,CAAC,EACCL,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAChC;EACAM,MAAM;IACJ,IAAI,CAAChC,MAAM,CAACiC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;EACzC;EAEAF,eAAe;IACb,IAAI,CAAC/B,MAAM,CAACiC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;EACzC;CACD;AAlDYrC,sBAAsB,eALlCF,SAAS,CAAC;EACTwC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,GACWxC,sBAAsB,CAkDlC;SAlDYA,sBAAsB","names":["Component","StatusEnum","UpdateProjectComponent","constructor","projectService","route","router","name","lead","techStack","projectStatus","startdate","deadline","totalPeopleAllocated","actualAllocationSOW","adrItemDocumentation","NOT_YET","c4Documentation","salesHandover","architectureHandover","decodersRepository","processAdoptionLatestVersion","projectKickoff","projectSharedDocumentRepository","ngOnInit","id","snapshot","params","getProjectById","subscribe","data","project","error","console","log","onSubmit","updateProject","goToProjectList","goBack","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/decodersmdu/pocone/src/app/update-project/update-project.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ProjectService } from '../Services/project.service';\nimport { Project } from '../Models/project.model';\nimport { StatusEnum } from '../enum';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-project',\n  templateUrl: './update-project.component.html',\n  styleUrls: ['./update-project.component.css']\n})\nexport class UpdateProjectComponent implements OnInit {\n  statusEnum = StatusEnum; \ntechStackInput: string = '';\nid:number=0;\n\n  project: Project = {\n    \n    name: '',\n    lead: '',\n    techStack: '',\n    projectStatus: '',\n    startdate: '',\n    deadline: '',\n    totalPeopleAllocated: 0,\n    actualAllocationSOW: 0,\n    adrItemDocumentation: StatusEnum.NOT_YET,\n    c4Documentation: StatusEnum.NOT_YET,\n    salesHandover: StatusEnum.NOT_YET,\n    architectureHandover: StatusEnum.NOT_YET,\n    decodersRepository: StatusEnum.NOT_YET,\n    processAdoptionLatestVersion: StatusEnum.NOT_YET,\n    projectKickoff: StatusEnum.NOT_YET,\n    projectSharedDocumentRepository: StatusEnum.NOT_YET,\n    \n  };\n  constructor(private projectService: ProjectService, private route:ActivatedRoute, private router: Router) {}\n\n \n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n\n    this.projectService.getProjectById(this.id).subscribe(data => {\n      this.project = data;\n    }, error => console.log(error));\n  }\n\n  onSubmit(){\n    this.projectService.updateProject(this.id, this.project).subscribe( data =>{\n      this.goToProjectList();\n    }\n    , error => console.log(error));\n  }\n  goBack() {\n    this.router.navigate(['/all-projects']); \n  }\n\n  goToProjectList(){\n    this.router.navigate(['/all-projects']);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}