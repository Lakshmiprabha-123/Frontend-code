{"ast":null,"code":"// import { Component, OnInit } from '@angular/core';\n// import { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\n// import { Color, Label } from 'ng2-charts';\n// import { ProjectService } from '../Services/project.service';// Adjust the import path as needed\nimport { __decorate } from \"tslib\";\n// @Component({\n//   selector: 'app-monthly-status',\n//   templateUrl: './monthly-status.component.html',\n//   styleUrls: ['./monthly-status.component.css']\n// })\n// export class MonthlyStatusComponent implements OnInit {\n//   projects: any[] = [];\n//   months: string[] = ['2024-01', '2024-02', '2024-03', '2024-04', '2024-05','2024-06','2024-07','2024-08']; // Example months, adjust as needed\n//   selectedProjectId: number | null = null;\n//   selectedMonth: string | null = null;\n//   lineChartData: ChartDataSets[] = [];\n//   lineChartLabels: Label[] = [];\n//   lineChartOptions: ChartOptions = {\n//     responsive: true,\n//   };\n//   lineChartLegend = true;\n//   lineChartType: ChartType = 'line';\n//   lineChartPlugins = [];\n//   constructor(private projectService: ProjectService) {}\n//   ngOnInit() {\n//     this.projectService.getAllProjects().subscribe(projects => {\n//       this.projects = projects;\n//     });\n//   }\n//   onProjectSelect(event: any) {\n//     this.selectedProjectId = event.target.value;\n//     this.fetchStatusHistory();\n//   }\n//   onMonthSelect(event: any) {\n//     this.selectedMonth = event.target.value;\n//     this.fetchStatusHistory();\n//   }\n//   fetchStatusHistory() {\n//     if (this.selectedProjectId && this.selectedMonth) {\n//       this.projectService.getStatusHistory(this.selectedProjectId, this.selectedMonth).subscribe(statusHistory => {\n//         this.updateChartData(statusHistory);\n//       });\n//     }\n//   }\n//   updateChartData(statusHistory: any[]) {\n//     this.lineChartLabels = statusHistory.map(status => status.date); // Assuming 'date' is a field in your status data\n//     this.lineChartData = [\n//       { data: statusHistory.map(status => status.value), label: 'Status' } // Assuming 'value' is the field for status value\n//     ];\n//   }\n// }\nimport { Component } from '@angular/core';\nlet MonthlyStatusComponent = class MonthlyStatusComponent {\n  constructor(projectService) {\n    this.projectService = projectService;\n    this.projects = [];\n    this.selectedProjectId = null;\n    this.selectedMonth = '';\n    this.lineChartData = [];\n    this.lineChartLabels = [];\n    this.lineChartOptions = {\n      responsive: true,\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Date'\n          },\n          ticks: {\n            autoSkip: true,\n            maxRotation: 45\n          }\n        }],\n        yAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Status'\n          }\n        }]\n      }\n    };\n    this.lineChartLegend = true;\n    this.lineChartType = 'line';\n    this.lineChartColors = [{\n      borderColor: '#42A5F5',\n      backgroundColor: 'rgba(66, 165, 245, 0.3)'\n    }];\n  }\n  ngOnInit() {\n    //     this.projectService.getAllProjects().subscribe(projects => {\n    //       this.projects = projects;\n    //     });\n  }\n  onProjectSelect(event) {\n    this.selectedProjectId = event.target.value;\n    this.fetchStatusHistory();\n  }\n  onMonthSelect(event) {\n    this.selectedMonth = event.target.value;\n    this.fetchStatusHistory();\n  }\n  fetchStatusHistory() {\n    if (this.selectedProjectId && this.selectedMonth) {\n      this.projectService.getStatusHistory(this.selectedProjectId, this.selectedMonth).subscribe(statusHistory => {\n        this.updateChart(statusHistory);\n      });\n    }\n  }\n  updateChart(statusHistory) {\n    this.lineChartLabels = statusHistory.map(status => status.date);\n    this.lineChartData = [{\n      data: statusHistory.map(status => status.currentStatus),\n      label: 'Current Status'\n    }];\n  }\n};\nMonthlyStatusComponent = __decorate([Component({\n  selector: 'app-monthly-status',\n  templateUrl: './monthly-status.component.html',\n  styleUrls: ['./monthly-status.component.css']\n})], MonthlyStatusComponent);\nexport { MonthlyStatusComponent };","map":{"version":3,"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAgB,eAAe;AAU1C,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAyBjCC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAxBlC,aAAQ,GAAU,EAAE;IACpB,sBAAiB,GAAkB,IAAI;IACvC,kBAAa,GAAW,EAAE;IAE1B,kBAAa,GAAoB,EAAE;IACnC,oBAAe,GAAY,EAAE;IAC7B,qBAAgB,GAAiB;MAC/BC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE;QACNC,KAAK,EAAE,CAAC;UACNC,UAAU,EAAE;YAAEC,OAAO,EAAE,IAAI;YAAEC,WAAW,EAAE;UAAM,CAAE;UAClDC,KAAK,EAAE;YAAEC,QAAQ,EAAE,IAAI;YAAEC,WAAW,EAAE;UAAE;SACzC,CAAC;QACFC,KAAK,EAAE,CAAC;UACNN,UAAU,EAAE;YAAEC,OAAO,EAAE,IAAI;YAAEC,WAAW,EAAE;UAAQ;SACnD;;KAEJ;IACD,oBAAe,GAAG,IAAI;IACtB,kBAAa,GAAc,MAAM;IACjC,oBAAe,GAAY,CACzB;MAAEK,WAAW,EAAE,SAAS;MAAEC,eAAe,EAAE;IAAyB,CAAE,CACvE;EAEqD;EAEtDC,QAAQ;IACN;IACA;IACA;EAAA;EAGFC,eAAe,CAACC,KAAU;IACxB,IAAI,CAACC,iBAAiB,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAC3C,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAC,aAAa,CAACL,KAAU;IACtB,IAAI,CAACM,aAAa,GAAGN,KAAK,CAACE,MAAM,CAACC,KAAK;IACvC,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAA,kBAAkB;IAChB,IAAI,IAAI,CAACH,iBAAiB,IAAI,IAAI,CAACK,aAAa,EAAE;MAChD,IAAI,CAACrB,cAAc,CAACsB,gBAAgB,CAAC,IAAI,CAACN,iBAAiB,EAAE,IAAI,CAACK,aAAa,CAAC,CAACE,SAAS,CAACC,aAAa,IAAG;QACzG,IAAI,CAACC,WAAW,CAACD,aAAa,CAAC;MACjC,CAAC,CAAC;;EAEN;EAEAC,WAAW,CAACD,aAAoB;IAC9B,IAAI,CAACE,eAAe,GAAGF,aAAa,CAACG,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,CAAC;IAC/D,IAAI,CAACC,aAAa,GAAG,CACnB;MACEC,IAAI,EAAEP,aAAa,CAACG,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACI,aAAa,CAAC;MACvDC,KAAK,EAAE;KACR,CACF;EACH;CACD;AA5DYnC,sBAAsB,eALlCD,SAAS,CAAC;EACTqC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,GACWtC,sBAAsB,CA4DlC;SA5DYA,sBAAsB","names":["Component","MonthlyStatusComponent","constructor","projectService","responsive","scales","xAxes","scaleLabel","display","labelString","ticks","autoSkip","maxRotation","yAxes","borderColor","backgroundColor","ngOnInit","onProjectSelect","event","selectedProjectId","target","value","fetchStatusHistory","onMonthSelect","selectedMonth","getStatusHistory","subscribe","statusHistory","updateChart","lineChartLabels","map","status","date","lineChartData","data","currentStatus","label","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/decodersmdu/pocone/src/app/monthly-status/monthly-status.component.ts"],"sourcesContent":["// import { Component, OnInit } from '@angular/core';\n// import { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\n// import { Color, Label } from 'ng2-charts';\n// import { ProjectService } from '../Services/project.service';// Adjust the import path as needed\n\n// @Component({\n//   selector: 'app-monthly-status',\n//   templateUrl: './monthly-status.component.html',\n//   styleUrls: ['./monthly-status.component.css']\n// })\n// export class MonthlyStatusComponent implements OnInit {\n//   projects: any[] = [];\n//   months: string[] = ['2024-01', '2024-02', '2024-03', '2024-04', '2024-05','2024-06','2024-07','2024-08']; // Example months, adjust as needed\n//   selectedProjectId: number | null = null;\n//   selectedMonth: string | null = null;\n\n//   lineChartData: ChartDataSets[] = [];\n//   lineChartLabels: Label[] = [];\n//   lineChartOptions: ChartOptions = {\n//     responsive: true,\n//   };\n//   lineChartLegend = true;\n//   lineChartType: ChartType = 'line';\n//   lineChartPlugins = [];\n\n//   constructor(private projectService: ProjectService) {}\n\n//   ngOnInit() {\n//     this.projectService.getAllProjects().subscribe(projects => {\n//       this.projects = projects;\n//     });\n//   }\n\n//   onProjectSelect(event: any) {\n//     this.selectedProjectId = event.target.value;\n//     this.fetchStatusHistory();\n//   }\n\n//   onMonthSelect(event: any) {\n//     this.selectedMonth = event.target.value;\n//     this.fetchStatusHistory();\n//   }\n\n//   fetchStatusHistory() {\n//     if (this.selectedProjectId && this.selectedMonth) {\n//       this.projectService.getStatusHistory(this.selectedProjectId, this.selectedMonth).subscribe(statusHistory => {\n//         this.updateChartData(statusHistory);\n//       });\n//     }\n//   }\n\n//   updateChartData(statusHistory: any[]) {\n//     this.lineChartLabels = statusHistory.map(status => status.date); // Assuming 'date' is a field in your status data\n//     this.lineChartData = [\n//       { data: statusHistory.map(status => status.value), label: 'Status' } // Assuming 'value' is the field for status value\n//     ];\n//   }\n// }\nimport { Component, OnInit } from '@angular/core';\nimport { ProjectService } from '../project.service'; // Update the path if necessary\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\nimport { Color, Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-monthly-status',\n  templateUrl: './monthly-status.component.html',\n  styleUrls: ['./monthly-status.component.css']\n})\nexport class MonthlyStatusComponent implements OnInit {\n  projects: any[] = [];\n  selectedProjectId: number | null = null;\n  selectedMonth: string = '';\n  \n  lineChartData: ChartDataSets[] = [];\n  lineChartLabels: Label[] = [];\n  lineChartOptions: ChartOptions = {\n    responsive: true,\n    scales: {\n      xAxes: [{ \n        scaleLabel: { display: true, labelString: 'Date' },\n        ticks: { autoSkip: true, maxRotation: 45 }\n      }],\n      yAxes: [{ \n        scaleLabel: { display: true, labelString: 'Status' }\n      }]\n    }\n  };\n  lineChartLegend = true;\n  lineChartType: ChartType = 'line';\n  lineChartColors: Color[] = [\n    { borderColor: '#42A5F5', backgroundColor: 'rgba(66, 165, 245, 0.3)' }\n  ];\n\n  constructor(private projectService: ProjectService) { }\n\n  ngOnInit() {\n    //     this.projectService.getAllProjects().subscribe(projects => {\n    //       this.projects = projects;\n    //     });\n      }\n\n  onProjectSelect(event: any): void {\n    this.selectedProjectId = event.target.value;\n    this.fetchStatusHistory();\n  }\n\n  onMonthSelect(event: any): void {\n    this.selectedMonth = event.target.value;\n    this.fetchStatusHistory();\n  }\n\n  fetchStatusHistory(): void {\n    if (this.selectedProjectId && this.selectedMonth) {\n      this.projectService.getStatusHistory(this.selectedProjectId, this.selectedMonth).subscribe(statusHistory => {\n        this.updateChart(statusHistory);\n      });\n    }\n  }\n\n  updateChart(statusHistory: any[]): void {\n    this.lineChartLabels = statusHistory.map(status => status.date);\n    this.lineChartData = [\n      {\n        data: statusHistory.map(status => status.currentStatus),\n        label: 'Current Status'\n      }\n    ];\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}