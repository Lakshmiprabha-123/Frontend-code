{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet MonthlyStatusComponent = class MonthlyStatusComponent {\n  constructor(projectService) {\n    this.projectService = projectService;\n    this.projects = [];\n    this.months = ['2024-01', '2024-02', '2024-03', '2024-04']; // Example months, adjust as needed\n    this.selectedProjectId = null;\n    this.selectedMonth = null;\n    this.lineChartData = [];\n    this.lineChartLabels = [];\n    this.lineChartOptions = {\n      responsive: true\n    };\n    this.lineChartLegend = true;\n    this.lineChartType = 'line';\n    this.lineChartPlugins = [];\n  }\n  ngOnInit() {\n    this.projectService.getProjects().subscribe(projects => {\n      this.projects = projects;\n    });\n  }\n  onProjectSelect(event) {\n    this.selectedProjectId = event.target.value;\n    this.fetchStatusHistory();\n  }\n  onMonthSelect(event) {\n    this.selectedMonth = event.target.value;\n    this.fetchStatusHistory();\n  }\n  fetchStatusHistory() {\n    if (this.selectedProjectId && this.selectedMonth) {\n      this.projectService.getStatusHistory(this.selectedProjectId, this.selectedMonth).subscribe(statusHistory => {\n        this.updateChartData(statusHistory);\n      });\n    }\n  }\n  updateChartData(statusHistory) {\n    this.lineChartLabels = statusHistory.map(status => status.date); // Assuming 'date' is a field in your status data\n    this.lineChartData = [{\n      data: statusHistory.map(status => status.value),\n      label: 'Status'\n    } // Assuming 'value' is the field for status value\n    ];\n  }\n};\n\nMonthlyStatusComponent = __decorate([Component({\n  selector: 'app-monthly-status',\n  templateUrl: './monthly-status.component.html',\n  styleUrls: ['./monthly-status.component.css']\n})], MonthlyStatusComponent);\nexport { MonthlyStatusComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAejCC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAdlC,aAAQ,GAAU,EAAE;IACpB,WAAM,GAAa,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;IACjE,sBAAiB,GAAkB,IAAI;IACvC,kBAAa,GAAkB,IAAI;IAEnC,kBAAa,GAAoB,EAAE;IACnC,oBAAe,GAAY,EAAE;IAC7B,qBAAgB,GAAiB;MAC/BC,UAAU,EAAE;KACb;IACD,oBAAe,GAAG,IAAI;IACtB,kBAAa,GAAG,MAAM;IACtB,qBAAgB,GAAG,EAAE;EAEgC;EAErDC,QAAQ;IACN,IAAI,CAACF,cAAc,CAACG,WAAW,EAAE,CAACC,SAAS,CAACC,QAAQ,IAAG;MACrD,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B,CAAC,CAAC;EACJ;EAEAC,eAAe,CAACC,KAAU;IACxB,IAAI,CAACC,iBAAiB,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAC3C,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAC,aAAa,CAACL,KAAU;IACtB,IAAI,CAACM,aAAa,GAAGN,KAAK,CAACE,MAAM,CAACC,KAAK;IACvC,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAA,kBAAkB;IAChB,IAAI,IAAI,CAACH,iBAAiB,IAAI,IAAI,CAACK,aAAa,EAAE;MAChD,IAAI,CAACb,cAAc,CAACc,gBAAgB,CAAC,IAAI,CAACN,iBAAiB,EAAE,IAAI,CAACK,aAAa,CAAC,CAACT,SAAS,CAACW,aAAa,IAAG;QACzG,IAAI,CAACC,eAAe,CAACD,aAAa,CAAC;MACrC,CAAC,CAAC;;EAEN;EAEAC,eAAe,CAACD,aAAoB;IAClC,IAAI,CAACE,eAAe,GAAGF,aAAa,CAACG,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC;IACjE,IAAI,CAACC,aAAa,GAAG,CACnB;MAAEC,IAAI,EAAEP,aAAa,CAACG,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACT,KAAK,CAAC;MAAEa,KAAK,EAAE;IAAQ,CAAE,CAAC;IAAA,CACtE;EACH;CACD;;AA/CYzB,sBAAsB,eALlCD,SAAS,CAAC;EACT2B,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,GACW5B,sBAAsB,CA+ClC;SA/CYA,sBAAsB","names":["Component","MonthlyStatusComponent","constructor","projectService","responsive","ngOnInit","getProjects","subscribe","projects","onProjectSelect","event","selectedProjectId","target","value","fetchStatusHistory","onMonthSelect","selectedMonth","getStatusHistory","statusHistory","updateChartData","lineChartLabels","map","status","date","lineChartData","data","label","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/decodersmdu/pocone/src/app/monthly-status/monthly-status.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport { Color, Label } from 'ng2-charts';\nimport { ProjectService } from './project.service'; // Adjust the import path as needed\n\n@Component({\n  selector: 'app-monthly-status',\n  templateUrl: './monthly-status.component.html',\n  styleUrls: ['./monthly-status.component.css']\n})\nexport class MonthlyStatusComponent implements OnInit {\n  projects: any[] = [];\n  months: string[] = ['2024-01', '2024-02', '2024-03', '2024-04']; // Example months, adjust as needed\n  selectedProjectId: number | null = null;\n  selectedMonth: string | null = null;\n\n  lineChartData: ChartDataSets[] = [];\n  lineChartLabels: Label[] = [];\n  lineChartOptions: ChartOptions = {\n    responsive: true,\n  };\n  lineChartLegend = true;\n  lineChartType = 'line';\n  lineChartPlugins = [];\n\n  constructor(private projectService: ProjectService) {}\n\n  ngOnInit() {\n    this.projectService.getProjects().subscribe(projects => {\n      this.projects = projects;\n    });\n  }\n\n  onProjectSelect(event: any) {\n    this.selectedProjectId = event.target.value;\n    this.fetchStatusHistory();\n  }\n\n  onMonthSelect(event: any) {\n    this.selectedMonth = event.target.value;\n    this.fetchStatusHistory();\n  }\n\n  fetchStatusHistory() {\n    if (this.selectedProjectId && this.selectedMonth) {\n      this.projectService.getStatusHistory(this.selectedProjectId, this.selectedMonth).subscribe(statusHistory => {\n        this.updateChartData(statusHistory);\n      });\n    }\n  }\n\n  updateChartData(statusHistory: any[]) {\n    this.lineChartLabels = statusHistory.map(status => status.date); // Assuming 'date' is a field in your status data\n    this.lineChartData = [\n      { data: statusHistory.map(status => status.value), label: 'Status' } // Assuming 'value' is the field for status value\n    ];\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}