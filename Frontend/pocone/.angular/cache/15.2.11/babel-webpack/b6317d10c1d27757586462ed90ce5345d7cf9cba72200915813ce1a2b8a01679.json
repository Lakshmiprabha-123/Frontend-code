{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet DashboardComponent = class DashboardComponent {\n  constructor(http) {\n    this.http = http;\n    this.barChartLabels = [];\n    this.barChartData = [];\n    this.pieChartLabels = [];\n    this.pieChartData = [];\n  }\n  ngOnInit() {\n    this.fetchProjectData();\n  }\n  fetchProjectData() {\n    // Replace with your API endpoint\n    this.http.get('http://localhost:8080/projects').subscribe(data => {\n      this.updateCharts(data);\n    });\n  }\n  updateCharts(data) {\n    this.barChartLabels = data.map(project => project.name);\n    this.pieChartLabels = ['On Track', 'Slow', 'Risk', 'Deep Risk'];\n    const statusCount = {\n      'On Track': 0,\n      'Slow': 0,\n      'Risk': 0,\n      'Deep Risk': 0\n    };\n    // Calculate counts for each status\n    data.forEach(project => {\n      statusCount[project.status]++;\n    });\n    // Bar chart data\n    this.barChartData = [{\n      data: data.map(project => this.pieChartLabels.indexOf(project.status)),\n      label: 'Project Status',\n      backgroundColor: ['green', 'yellow', 'brown', 'red']\n    }];\n    // Pie chart data\n    this.pieChartData = [{\n      data: Object.values(statusCount),\n      backgroundColor: ['green', 'yellow', 'brown', 'red'],\n      label: 'Status Distribution'\n    }];\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAM7BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IALxB,mBAAc,GAAa,EAAE;IAC7B,iBAAY,GAAU,EAAE;IACxB,mBAAc,GAAa,EAAE;IAC7B,iBAAY,GAAU,EAAE;EAEe;EAEvCC,QAAQ;IACN,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAA,gBAAgB;IACd;IACA,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,gCAAgC,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;MACtE,IAAI,CAACC,YAAY,CAACD,IAAI,CAAC;IACzB,CAAC,CAAC;EACJ;EAEAC,YAAY,CAACD,IAAW;IACtB,IAAI,CAACE,cAAc,GAAGF,IAAI,CAACG,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC;IACvD,IAAI,CAACC,cAAc,GAAG,CAAC,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,CAAC;IAE/D,MAAMC,WAAW,GAAG;MAClB,UAAU,EAAE,CAAC;MACb,MAAM,EAAE,CAAC;MACT,MAAM,EAAE,CAAC;MACT,WAAW,EAAE;KACd;IAED;IACAP,IAAI,CAACQ,OAAO,CAACJ,OAAO,IAAG;MACrBG,WAAW,CAACH,OAAO,CAACK,MAAM,CAAC,EAAE;IAC/B,CAAC,CAAC;IAEF;IACA,IAAI,CAACC,YAAY,GAAG,CAClB;MAAEV,IAAI,EAAEA,IAAI,CAACG,GAAG,CAACC,OAAO,IAAI,IAAI,CAACE,cAAc,CAACK,OAAO,CAACP,OAAO,CAACK,MAAM,CAAC,CAAC;MAAEG,KAAK,EAAE,gBAAgB;MAAEC,eAAe,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK;IAAC,CAAE,CAC1J;IAED;IACA,IAAI,CAACC,YAAY,GAAG,CAClB;MACEd,IAAI,EAAEe,MAAM,CAACC,MAAM,CAACT,WAAW,CAAC;MAChCM,eAAe,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,CAAC;MACpDD,KAAK,EAAE;KACR,CACF;EACH;CACD;AAjDYnB,kBAAkB,eAL9BD,SAAS,CAAC;EACTyB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACW1B,kBAAkB,CAiD9B;SAjDYA,kBAAkB","names":["Component","DashboardComponent","constructor","http","ngOnInit","fetchProjectData","get","subscribe","data","updateCharts","barChartLabels","map","project","name","pieChartLabels","statusCount","forEach","status","barChartData","indexOf","label","backgroundColor","pieChartData","Object","values","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/decodersmdu/pocone/src/app/dashboard/dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ChartOptions, ChartType, ChartData } from 'chart.js';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  barChartLabels: string[] = [];\n  barChartData: any[] = [];\n  pieChartLabels: string[] = [];\n  pieChartData: any[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.fetchProjectData();\n  }\n\n  fetchProjectData(): void {\n    // Replace with your API endpoint\n    this.http.get<any[]>('http://localhost:8080/projects').subscribe(data => {\n      this.updateCharts(data);\n    });\n  }\n\n  updateCharts(data: any[]): void {\n    this.barChartLabels = data.map(project => project.name);\n    this.pieChartLabels = ['On Track', 'Slow', 'Risk', 'Deep Risk'];\n\n    const statusCount = {\n      'On Track': 0,\n      'Slow': 0,\n      'Risk': 0,\n      'Deep Risk': 0\n    };\n\n    // Calculate counts for each status\n    data.forEach(project => {\n      statusCount[project.status]++;\n    });\n\n    // Bar chart data\n    this.barChartData = [\n      { data: data.map(project => this.pieChartLabels.indexOf(project.status)), label: 'Project Status', backgroundColor: ['green', 'yellow', 'brown', 'red'] }\n    ];\n\n    // Pie chart data\n    this.pieChartData = [\n      {\n        data: Object.values(statusCount),\n        backgroundColor: ['green', 'yellow', 'brown', 'red'],\n        label: 'Status Distribution'\n      }\n    ];\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}