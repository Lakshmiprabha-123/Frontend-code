{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/project.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ng2-charts\";\nfunction WeeklyDefectsLineChartComponent_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const project_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", project_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(project_r3.name);\n  }\n}\nfunction WeeklyDefectsLineChartComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const year_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", year_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(year_r4);\n  }\n}\nfunction WeeklyDefectsLineChartComponent_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const month_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", month_r5.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(month_r5.name);\n  }\n}\nexport class WeeklyDefectsLineChartComponent {\n  constructor(projectService) {\n    this.projectService = projectService;\n    this.projects = [];\n    this.lineChartData = [];\n    this.lineChartLabels = [];\n    this.selectedProjectId = 0;\n    this.selectedYear = new Date().getFullYear();\n    this.selectedMonth = new Date().getMonth() + 1;\n    this.years = [];\n    this.months = [{\n      value: 1,\n      name: 'January'\n    }, {\n      value: 2,\n      name: 'February'\n    }, {\n      value: 3,\n      name: 'March'\n    }, {\n      value: 4,\n      name: 'April'\n    }, {\n      value: 5,\n      name: 'May'\n    }, {\n      value: 6,\n      name: 'June'\n    }, {\n      value: 7,\n      name: 'July'\n    }, {\n      value: 8,\n      name: 'August'\n    }, {\n      value: 9,\n      name: 'September'\n    }, {\n      value: 10,\n      name: 'October'\n    }, {\n      value: 11,\n      name: 'November'\n    }, {\n      value: 12,\n      name: 'December'\n    }];\n    this.lineChartOptions = {\n      responsive: true,\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Week Number'\n          }\n        }],\n        yAxes: [{\n          scaleLabel: {\n            display: true,\n            labelString: 'Number of Defects'\n          },\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      },\n      legend: {\n        display: true,\n        position: 'bottom'\n      },\n      tooltips: {\n        callbacks: {\n          label: tooltipItem => {\n            return `Week ${tooltipItem.xLabel}: ${tooltipItem.yLabel} Defects`;\n          }\n        }\n      }\n    };\n    this.lineChartType = 'line';\n  }\n  ngOnInit() {\n    const currentYear = new Date().getFullYear();\n    this.years = Array.from({\n      length: 10\n    }, (_, i) => currentYear - i);\n    this.projectService.getAllProjects().subscribe(projects => {\n      this.projects = projects;\n      if (projects.length > 0 && projects[0].id !== undefined) {\n        this.selectedProjectId = projects[0].id;\n        this.fetchWeeklyDefects();\n      }\n    });\n  }\n  fetchWeeklyDefects() {\n    if (this.selectedProjectId && this.selectedYear && this.selectedMonth) {\n      this.projectService.getWeeklyDefectsByMonth(this.selectedProjectId, this.selectedYear, this.selectedMonth).subscribe(defectsData => {\n        const weekNumbers = defectsData.map(item => `Week ${item.weekNumber}`);\n        const defectsCount = defectsData.map(item => item.numberOfDefects);\n        this.lineChartLabels = weekNumbers;\n        this.lineChartData = [{\n          data: defectsCount,\n          label: `Project ${this.selectedProjectId} Defects for ${this.selectedYear}-${this.selectedMonth}`,\n          fill: false,\n          borderColor: 'blue',\n          backgroundColor: 'rgba(255, 0, 0, 0.2)'\n        }];\n      });\n    }\n  }\n  static #_ = this.ɵfac = function WeeklyDefectsLineChartComponent_Factory(t) {\n    return new (t || WeeklyDefectsLineChartComponent)(i0.ɵɵdirectiveInject(i1.ProjectService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WeeklyDefectsLineChartComponent,\n    selectors: [[\"app-weekly-defects-line-chart\"]],\n    decls: 18,\n    vars: 11,\n    consts: [[1, \"form-group\"], [\"for\", \"project\"], [\"id\", \"project\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"year\"], [\"id\", \"year\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"for\", \"month\"], [\"id\", \"month\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"baseChart\", \"\", 3, \"datasets\", \"labels\", \"options\", \"legend\", \"chartType\"], [3, \"value\"]],\n    template: function WeeklyDefectsLineChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"label\", 1);\n        i0.ɵɵtext(3, \"Select Project:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"select\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function WeeklyDefectsLineChartComponent_Template_select_ngModelChange_4_listener($event) {\n          return ctx.selectedProjectId = $event;\n        })(\"change\", function WeeklyDefectsLineChartComponent_Template_select_change_4_listener() {\n          return ctx.fetchWeeklyDefects();\n        });\n        i0.ɵɵtemplate(5, WeeklyDefectsLineChartComponent_option_5_Template, 2, 2, \"option\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 0)(8, \"label\", 4);\n        i0.ɵɵtext(9, \"Select Year:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"select\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function WeeklyDefectsLineChartComponent_Template_select_ngModelChange_10_listener($event) {\n          return ctx.selectedYear = $event;\n        })(\"change\", function WeeklyDefectsLineChartComponent_Template_select_change_10_listener() {\n          return ctx.fetchWeeklyDefects();\n        });\n        i0.ɵɵtemplate(11, WeeklyDefectsLineChartComponent_option_11_Template, 2, 2, \"option\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 0)(13, \"label\", 6);\n        i0.ɵɵtext(14, \"Select Month:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"select\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function WeeklyDefectsLineChartComponent_Template_select_ngModelChange_15_listener($event) {\n          return ctx.selectedMonth = $event;\n        })(\"change\", function WeeklyDefectsLineChartComponent_Template_select_change_15_listener() {\n          return ctx.fetchWeeklyDefects();\n        });\n        i0.ɵɵtemplate(16, WeeklyDefectsLineChartComponent_option_16_Template, 2, 2, \"option\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(17, \"canvas\", 8);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedProjectId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.projects);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedYear);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.years);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedMonth);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.months);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"datasets\", ctx.lineChartData)(\"labels\", ctx.lineChartLabels)(\"options\", ctx.lineChartOptions)(\"legend\", true)(\"chartType\", ctx.lineChartType);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i4.BaseChartDirective],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","WeeklyDefectsLineChartComponent","constructor","projectService","Date","getFullYear","getMonth","value","name","responsive","scales","xAxes","scaleLabel","display","labelString","yAxes","ticks","beginAtZero","legend","position","tooltips","callbacks","label","tooltipItem","xLabel","yLabel","ngOnInit","currentYear","years","Array","from","length","_","i","getAllProjects","subscribe","projects","id","undefined","selectedProjectId","fetchWeeklyDefects","selectedYear","selectedMonth","getWeeklyDefectsByMonth","defectsData","weekNumbers","map","item","weekNumber","defectsCount","numberOfDefects","lineChartLabels","lineChartData","data","fill","borderColor","backgroundColor","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/decodersmdu/pocone/src/app/weekly-defects-line-chart/weekly-defects-line-chart.component.html","/home/decodersmdu/pocone/src/app/weekly-defects-line-chart/weekly-defects-line-chart.component.ts"],"sourcesContent":["<div>\n    <div class=\"form-group\">\n      <label for=\"project\">Select Project:</label>\n      <select id=\"project\" [(ngModel)]=\"selectedProjectId\" (change)=\"fetchWeeklyDefects()\">\n        <option *ngFor=\"let project of projects\" [value]=\"project.id\">{{ project.name }}</option>\n      </select><br>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"year\">Select Year:</label>\n      <select id=\"year\" [(ngModel)]=\"selectedYear\" (change)=\"fetchWeeklyDefects()\">\n        <option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"month\">Select Month:</label>\n      <select id=\"month\" [(ngModel)]=\"selectedMonth\" (change)=\"fetchWeeklyDefects()\">\n        <option *ngFor=\"let month of months\" [value]=\"month.value\">{{ month.name }}</option>\n      </select>\n    </div>\n  \n    <canvas baseChart\n      [datasets]=\"lineChartData\"\n      [labels]=\"lineChartLabels\"\n      [options]=\"lineChartOptions\"\n      [legend]=\"true\"\n      [chartType]=\"lineChartType\">\n    </canvas>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\nimport { Label } from 'ng2-charts';\nimport { ProjectService } from '../Services/project.service';\n\n@Component({\n  selector: 'app-weekly-defects-line-chart',\n  templateUrl: './weekly-defects-line-chart.component.html',\n  styleUrls: ['./weekly-defects-line-chart.component.css']\n})\nexport class WeeklyDefectsLineChartComponent implements OnInit {\n  public projects: any[] = [];\n  public lineChartData: ChartDataSets[] = [];\n  public lineChartLabels: Label[] = [];\n  public selectedProjectId: number = 0;\n  public selectedYear: number = new Date().getFullYear();\n  public selectedMonth: number = new Date().getMonth() + 1;\n  public years: number[] = [];\n  public months = [\n    { value: 1, name: 'January' },\n    { value: 2, name: 'February' },\n    { value: 3, name: 'March' },\n    { value: 4, name: 'April' },\n    { value: 5, name: 'May' },\n    { value: 6, name: 'June' },\n    { value: 7, name: 'July' },\n    { value: 8, name: 'August' },\n    { value: 9, name: 'September' },\n    { value: 10, name: 'October' },\n    { value: 11, name: 'November' },\n    { value: 12, name: 'December' }\n  ];\n\n  public lineChartOptions: ChartOptions = {\n    responsive: true,\n    scales: {\n      xAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: 'Week Number'\n        }\n      }],\n      yAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: 'Number of Defects'\n        },\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    },\n    legend: {\n      display: true,\n      position: 'bottom'\n    },\n    tooltips: {\n      callbacks: {\n        label: (tooltipItem) => {\n          return `Week ${tooltipItem.xLabel}: ${tooltipItem.yLabel} Defects`;\n        }\n      }\n    }\n  };\n  public lineChartType: ChartType = 'line';\n\n  constructor(private projectService: ProjectService) { }\n\n  ngOnInit(): void {\n    const currentYear = new Date().getFullYear();\n    this.years = Array.from({ length: 10 }, (_, i) => currentYear - i);\n\n    this.projectService.getAllProjects().subscribe((projects: any[]) => {\n      this.projects = projects;\n      if (projects.length > 0 && projects[0].id !== undefined) {\n        this.selectedProjectId = projects[0].id!;\n        this.fetchWeeklyDefects();\n      }\n    });\n  }\n\n  fetchWeeklyDefects(): void {\n    if (this.selectedProjectId && this.selectedYear && this.selectedMonth) {\n      this.projectService.getWeeklyDefectsByMonth(this.selectedProjectId, this.selectedYear, this.selectedMonth).subscribe((defectsData: { weekNumber: number, numberOfDefects: number }[]) => {\n        const weekNumbers = defectsData.map(item => `Week ${item.weekNumber}`);\n        const defectsCount = defectsData.map(item => item.numberOfDefects);\n\n        this.lineChartLabels = weekNumbers;\n        this.lineChartData = [{\n          data: defectsCount,\n          label: `Project ${this.selectedProjectId} Defects for ${this.selectedYear}-${this.selectedMonth}`,\n          fill: false,\n          borderColor: 'blue',\n          backgroundColor: 'rgba(255, 0, 0, 0.2)',\n        }];\n      });\n    }\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}