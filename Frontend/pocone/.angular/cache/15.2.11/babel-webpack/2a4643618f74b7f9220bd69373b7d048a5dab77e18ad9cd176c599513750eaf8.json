{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProjectService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/projects'; // backend API URL\n  }\n\n  getProjectList() {\n    return this.http.get(`${this.apiUrl}`);\n  }\n  saveProject(project) {\n    return this.http.post(`${this.apiUrl}`, project);\n  }\n  getCurrentStatus(id) {\n    return this.http.get(`${this.apiUrl}/${id}/status`);\n  }\n  saveStatus(projectId, status) {\n    return this.http.post(`${this.apiUrl}/${projectId}/savestatus`, status);\n  }\n  updateProjectStatus(id, status) {\n    return this.http.put(`${this.apiUrl}/${id}`, status);\n  }\n  deleteProject(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  getProjectById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  updateProject(id, project) {\n    return this.http.put(`${this.apiUrl}/${id}`, project);\n  }\n  static #_ = this.ɵfac = function ProjectService_Factory(t) {\n    return new (t || ProjectService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProjectService,\n    factory: ProjectService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,gCAAgC,CAAC,CAAC;EAEZ;;EAEvCC,cAAc;IACZ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,GAAG,IAAI,CAACC,MAAM,EAAE,CAAC;EACnD;EAEAC,WAAW,CAACC,OAAgB;IAC1B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,EAAE,EAAEE,OAAO,CAAC;EAClD;EAEAE,gBAAgB,CAACC,EAAU;IACzB,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAAmB,GAAG,IAAI,CAACC,MAAM,IAAIK,EAAE,SAAS,CAAC;EACvE;EAEAC,UAAU,CAACC,SAAiB,EAAEC,MAAc;IAC1C,OAAO,IAAI,CAACX,IAAI,CAACM,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,IAAIO,SAAS,aAAa,EAAEC,MAAM,CAAC;EACzE;EAEAC,mBAAmB,CAACJ,EAAU,EAAEG,MAAgB;IAC9C,OAAO,IAAI,CAACX,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACV,MAAM,IAAIK,EAAE,EAAE,EAAEG,MAAM,CAAC;EACtD;EAEAG,aAAa,CAACN,EAAU;IACtB,OAAO,IAAI,CAACR,IAAI,CAACe,MAAM,CAAC,GAAG,IAAI,CAACZ,MAAM,IAAIK,EAAE,EAAE,CAAC;EACjD;EAEAQ,cAAc,CAACR,EAAU;IACvB,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAAU,GAAG,IAAI,CAACC,MAAM,IAAIK,EAAE,EAAE,CAAC;EACvD;EAEAS,aAAa,CAACT,EAAU,EAAEH,OAAgB;IACxC,OAAO,IAAI,CAACL,IAAI,CAACa,GAAG,CAAU,GAAG,IAAI,CAACV,MAAM,IAAIK,EAAE,EAAE,EAAEH,OAAO,CAAC;EAChE;EAAC;qBApCUP,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAoB,SAAdpB,cAAc;IAAAqB,YAFb;EAAM","names":["ProjectService","constructor","http","getProjectList","get","apiUrl","saveProject","project","post","getCurrentStatus","id","saveStatus","projectId","status","updateProjectStatus","put","deleteProject","delete","getProjectById","updateProject","factory","providedIn"],"sourceRoot":"","sources":["/home/decodersmdu/pocone/src/app/Services/project.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Project } from '../Models/project.model';\nimport { Status } from '../Models/status.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n\n  private apiUrl = 'http://localhost:8080/projects'; // backend API URL\n\n  constructor(private http: HttpClient) {}\n\n  getProjectList(): Observable<Project[]>{\n    return this.http.get<Project[]>(`${this.apiUrl}`);\n  }\n\n  saveProject(project: Project): Observable<Object> {\n    return this.http.post(`${this.apiUrl}`, project);\n  }\n\n  getCurrentStatus(id: number): Observable<{status:string}> {\n    return this.http.get<{status: string}>(`${this.apiUrl}/${id}/status`);\n  }\n\n  saveStatus(projectId: number, status: Status): Observable<Object> {\n    return this.http.post(`${this.apiUrl}/${projectId}/savestatus`, status);\n  }\n\n  updateProjectStatus(id: number, status: Status[]): Observable<Object>{\n    return this.http.put(`${this.apiUrl}/${id}`, status);\n  }\n\n  deleteProject(id: number): Observable<Object>{\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n\n  getProjectById(id: number): Observable<Project> {\n    return this.http.get<Project>(`${this.apiUrl}/${id}`);\n  }\n\n  updateProject(id: number, project: Project): Observable<Project> {\n    return this.http.put<Project>(`${this.apiUrl}/${id}`, project);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}